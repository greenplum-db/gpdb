name: Greenplum ABI Tests

on:
  workflow_dispatch:
  push:
    branches:
      - 6X_STABLE
      ## For testing, should be removed later.
      - 6x-abi-check
    paths:
      - 'src/*'
      - '.github/workflows/greenplum-abi-tests.yml'
      - '.abi-check/*'

jobs:
  abi-dump-setup:
    runs-on: ubuntu-latest
    outputs:
      BASELINE_REF: ${{ steps.vars.outputs.BASELINE_REF }}
      BASELINE_VERSION: ${{ steps.vars.outputs.BASELINE_VERSION }}
      ABI_LIBS: ${{ steps.vars.outputs.ABI_LIBS }}
      ABI_HEADERS: ${{ steps.vars.outputs.ABI_HEADERS }}
    steps:
      - name: Fetch source
        uses: actions/checkout@v3

      - name: Get Greenplum version variables
        id: vars
        run: |
          remote_repo='https://github.com/greenplum-db/gpdb.git'
          git ls-remote --tags --refs --sort='v:refname' $remote_repo '6.*' | tail -n 1  > baseline_version_ref
          baseline_ref=$(cat baseline_version_ref | awk '{print $1}')
          baseline_version=$(cat baseline_version_ref | awk '{print $2}')
          echo "BASELINE_REF=${baseline_ref}" | tee -a $GITHUB_OUTPUT
          echo "BASELINE_VERSION=${baseline_version#'refs/tags/'}" | tee -a $GITHUB_OUTPUT
          echo "ABI_LIBS=postgres" | tee -a $GITHUB_OUTPUT
          echo "ABI_HEADERS=." | tee -a $GITHUB_OUTPUT

  abi-dump:
    needs: abi-dump-setup
    runs-on: ubuntu-latest
    container: gcr.io/data-gpdb-public-images/gpdb6-rocky8-build
    strategy:
      matrix:
        name:
          - build-baseline
          - build-latest
        include:
          - name: build-baseline
            repo: greenplum-db/gpdb
            ref: ${{ needs.abi-dump-setup.outputs.BASELINE_VERSION }}
          - name: build-latest
            repo: ${{ github.repository }}
            ref: ${{ github.sha }}

    steps:
      - name: Download Greenplum source code
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.repo }}
          ref: ${{ matrix.ref }}
          submodules: recursive
          fetch-depth: 0 # Specify '0' to fetch all history for all branches and tags.
          path: gpdb_src

      - name: Install abi-dumper
        run: |
          yum install -y epel-release
          yum install -y abi-dumper ctags

      - name: Build Greenplum
        run: |
          env SKIP_UNITTESTS=1 CONFIGURE_FLAGS='--enable-tap-tests --enable-debug-extensions' \
            gpdb_src/concourse/scripts/compile_gpdb.bash

      - name: Dump ABI
        run: |
          abi-dumper -lver ${{ matrix.ref }} -skip-cxx -public-headers /usr/local/greenplum-db-devel/include/${{ needs.abi-dump-setup.outputs.ABI_HEADERS }} -o postgres-${{ matrix.ref }}.abi /usr/local/greenplum-db-devel/bin/postgres

      - name: Upload ABI files
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: '*${{ matrix.ref }}.abi'

  abi-compare:
    needs:
      - abi-dump-setup
      - abi-dump
    runs-on: ubuntu-latest
    container: gcr.io/data-gpdb-public-images/gpdb6-rocky8-build
    steps:
      ## We need to fetch the source again since we need to skip checking some symbols
      ## which are defined under the 'gpdb_src/.abi-check/' directory.
      - name: Fetch source
        uses: actions/checkout@v3

      - name: Download baseline
        uses: actions/download-artifact@v3
        with:
          name: build-baseline
          path: build-baseline/
      - name: Download latest
        uses: actions/download-artifact@v3
        with:
          name: build-latest
          path: build-latest/

      - name: Install abi-compliance-checker
        run: |
          yum install -y epel-release
          yum install -y abi-compliance-checker

      - name: Compare ABI
        run: |
          SKIP_POSTGRES_SYMBOLS_LIST=".abi-check/${{ needs.abi-dump-setup.outputs.BASELINE_VERSION }}/skip-postgres-symbols.txt"
          if [[ -f "$SKIP_POSTGRES_SYMBOLS_LIST" ]]; then
            abi-compliance-checker -lib postgres \
                                   -old build-baseline/postgres*.abi \
                                   -new build-latest/postgres*.abi \
                                   -skip-symbols $SKIP_POSTGRES_SYMBOLS_LIST
          else
            abi-compliance-checker -lib postgres \
                                   -old build-baseline/postgres*.abi \
                                   -new build-latest/postgres*.abi
          fi

      - name: Upload ABI Comparison
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: compat-report-${{ github.sha }}
          path: compat_reports/
