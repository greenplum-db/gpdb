CREATE OR REPLACE FUNCTION read_from_s3() RETURNS integer AS
        '$libdir/gps3ext.so', 's3_import' LANGUAGE C STABLE;
CREATE OR REPLACE FUNCTION write_to_s3() RETURNS integer AS
        '$libdir/gps3ext.so', 's3_export' LANGUAGE C STABLE;
CREATE PROTOCOL s3 (
        readfunc = read_from_s3,
        writefunc = write_to_s3
);
DROP EXTERNAL TABLE IF EXISTS s3write_lots_of_files_read;
NOTICE:  table "s3write_lots_of_files_read" does not exist, skipping
DROP EXTERNAL TABLE IF EXISTS s3write_lots_of_files_write;
NOTICE:  table "s3write_lots_of_files_write" does not exist, skipping
CREATE READABLE EXTERNAL TABLE s3write_lots_of_files_read (date text, time text, status bool, sample1 float, sample2 float,
        volume int) LOCATION('s3://s3-us-west-2.amazonaws.com/@write_prefix@/lotsoffiles/ config=@config_file@') FORMAT 'csv';
CREATE WRITABLE EXTERNAL TABLE s3write_lots_of_files_write (date text, time text, status bool, sample1 float, sample2 float,
        volume int) LOCATION('s3://s3-us-west-2.amazonaws.com/@write_prefix@/lotsoffiles/ config=@config_file@') FORMAT 'csv';
SELECT count(*) FROM s3write_lots_of_files_read;
 count
-------
     0
(1 row)

CREATE OR REPLACE FUNCTION write_lots_of_files(n integer) RETURNS text AS
$$
DECLARE
    i int;
BEGIN
    FOR i IN SELECT * FROM generate_series(1, n) LOOP
        INSERT INTO s3write_lots_of_files_write (date, time, status, sample1, sample2, volume)
            SELECT current_date, localtime, (random() > 0.5)::bool,
                    trunc(random()::numeric, 8), trunc(random()::numeric, 8), i;
    END LOOP;

    RETURN textcat(textcat('Insert ', n), ' files');
END;
$$ LANGUAGE 'plpgsql';
SELECT * FROM write_lots_of_files(20);
 write_lots_of_files
---------------------
 Insert 20 files
(1 row)

select min(volume), max(volume), count(volume) from s3write_lots_of_files_read;
 min | max | count
-----+-----+-------
   1 |  20 |    20
(1 row)

DROP FUNCTION write_lots_of_files (integer);
DROP EXTERNAL TABLE IF EXISTS s3write_lots_of_files_read;
DROP EXTERNAL TABLE IF EXISTS s3write_lots_of_files_write;
DROP PROTOCOL s3;
