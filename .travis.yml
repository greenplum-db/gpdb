## ----------------------------------------------------------------------
## Travis CI build script for Greenplum Database Open Source Project.
## ----------------------------------------------------------------------

language: c
sudo: false

git:
  submodules: false

addons:
    apt:
        config:
            retries: true
        sources: &common_sources
            - ubuntu-toolchain-r-test
        packages: &common_packages
            - gcc-8
            - libxml2
            - libxml2-dev
            - libevent-dev
            - libperl-dev
            - g++-8
            - python-dev
            - python-yaml
            - libapr1-dev
            - libzstd1
            - libzstd1-dev

matrix:
    allow_failures:
      - env: - T=experimental OVERRIDE_CC="CC=gcc-8" OVERRIDE_CXX="CXX=g++-8"
    fast_finish: true
    include:
        # OS and Compiler variations
        # ----------------------------------------------------------------
        #
        # Ubuntu Bionic, gcc 8, AMD64
        - os: linux
          dist: bionic
          compiler: gcc
          env:
              - T=debug C=""
              - OVERRIDE_CC="CC=gcc-8" OVERRIDE_CXX="CXX=g++-8"
          addons:
              apt:
                  sources:
                      - *common_sources
                  packages:
                      - *common_packages
        # Ubuntu Xenial, clang 7, AMD64
        - os: linux
          dist: xenial
          compiler: clang
          env:
              - T=debug C=""
              - OVERRIDE_CC="CC=clang-7" OVERRIDE_CXX="CXX=clang++-7"
          addons:
              apt:
                  sources:
                      - *common_sources
                      - llvm-toolchain-xenial-7
                  packages:
                      - *common_packages
                      - clang-7
        # Ubuntu Bionic, gcc 8, ARM64
        - os: linux
          dist: bionic
          compiler: gcc
          arch: arm64
          env:
              - T=experimental
              - OVERRIDE_CC="CC=gcc-8" OVERRIDE_CXX="CXX=g++-8"
          addons:
              apt:
                  sources:
                      - *common_sources
                  packages:
                      - *common_packages
        #
        # Configuration variations
        # ----------------------------------------------------------------
        #
        # Production build without any debugging or assertions
        - os: linux
          dist: bionic
          compiler: gcc
          env:
              - T=production C=""
              - OVERRIDE_CC="CC=gcc-8" OVERRIDE_CXX="CXX=g++-8"
          addons:
              apt:
                  sources: *common_sources
                  packages: *common_packages
        # Debug build without any compression algorithms supplied
        - os: linux
          dist: bionic
          compiler: gcc
          env:
              - T=debug C="--without-zlib --without-libbz2 --without-zstd --without-quicklz"
              - OVERRIDE_CC="CC=gcc-8" OVERRIDE_CXX="CXX=g++-8"
          addons:
              apt:
                  sources: *common_sources
                  packages: *common_packages

## ----------------------------------------------------------------------
## Build tools
## ----------------------------------------------------------------------

python:
    - "2.7"

before_install:
    - eval "${OVERRIDE_CC}"
    - eval "${OVERRIDE_CXX}"

## ----------------------------------------------------------------------
## Install supporting Python modules
## ----------------------------------------------------------------------

install:
    - pip install --user --upgrade pip
    - pip install --user --pre psutil
    - pip install --user lockfile
    - pip install --user setuptools

## ----------------------------------------------------------------------
## Perform build:
## ----------------------------------------------------------------------

before_script:
    - ssh-keygen -t "rsa" -f ~/.ssh/id_rsa -N ""
    - cp ~/.ssh/{id_rsa.pub,authorized_keys}

script:
  - |
      set -eo pipefail
      if [ "$T" = "debug" ]; then
        ./configure \
            --prefix=${TRAVIS_BUILD_DIR}/gpsql \
            --enable-cassert \
            --enable-debug \
            --enable-debug-extensions \
            --with-perl \
            --with-python \
            --disable-orca \
            --with-openssl \
            --with-ldap \
            --with-libcurl \
            --with-libxml \
            --enable-mapreduce \
            --enable-orafce \
            $C
        make -j 2 -s install
        source ${TRAVIS_BUILD_DIR}/gpsql/greenplum_path.sh
        make -s unittest-check
        make -C gpAux/gpdemo cluster
        source gpAux/gpdemo/gpdemo-env.sh
        make -C src/test/regress installcheck-small
      fi
  - |
      set -eo pipefail
      if [ "$T" = "production" ]; then
        ./configure \
            --prefix=${TRAVIS_BUILD_DIR}/gpsql \
            --with-perl \
            --with-python \
            --disable-orca \
            --with-openssl \
            --with-ldap \
            --with-libcurl \
            --with-libxml \
            --enable-mapreduce \
            --enable-orafce \
            $C
        make -j 2 -s install
        source ${TRAVIS_BUILD_DIR}/gpsql/greenplum_path.sh
        make -s unittest-check
        make -C gpAux/gpdemo cluster
        source gpAux/gpdemo/gpdemo-env.sh
        make -C src/test/regress installcheck-small
      fi
  - |
      set -eo pipefail
      if [ "$T" = "experimental" ]; then
        ./configure \
            --prefix=${TRAVIS_BUILD_DIR}/gpsql \
            --enable-cassert \
            --enable-debug \
            --enable-debug-extensions \
            --with-perl \
            --with-python \
            --disable-orca \
            --with-openssl \
            --with-ldap \
            --with-libcurl \
            --with-libxml \
            --enable-mapreduce \
            --enable-orafce \
            $C
        make -j 2 -s install
        source ${TRAVIS_BUILD_DIR}/gpsql/greenplum_path.sh
        make -s unittest-check
        make -C gpAux/gpdemo cluster
        source gpAux/gpdemo/gpdemo-env.sh
        make -C src/test/regress installcheck-small
      fi


after_script:
  - source ${TRAVIS_BUILD_DIR}/gpsql/greenplum_path.sh
  - postgres --version
  - gpssh --version
