<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1"><title id="oz137116">gpmt-only</title>
  <body>
    <p> GPMT (Greenplum Magic Tool) provides a set of diagnostic utilities to troubleshoot and
      resolve common supportability issues, along with a consistent method for gathering information
      required by VMware Support.</p>
    <section>
      <title>Synopsis</title>
      <codeblock><b>gpmt</b> tool [<varname>tool_options</varname> ...] 
                   <b>analyze_session</b>[<varname>-session SESSION_ID </varname> [<varname> -master-dir DIRECTORY</varname>] 
                   [<varname>-segment-dir DIRECTORY</varname>]
                   <b>gp_log_collector</b>[<varname>-failed-segs</varname> | -c ID1,ID2,...| <varname>-hostfile FILE</varname> | [<varname>-h HOST1, HOST2,...</varname>]  
                   [ -start YYYY-MM-DD ] [ -end YYYY-MM-DD ]
                   [ -dir PATH ] [ -segdir PATH ] [ -a ]
                   <b>gpstatscheck</b> -f QUERYFILE
                   [<varname>-p PORT</varname>] [<varname>-d DATABASE]</varname>
                   <b>packcore</b> -cmd COMMAND -core COREFILE[<varname>-binary BINARY </varname>] 
                   [<varname>-keep_tmp_dir</varname>] [<varname>-ignore_missing]</varname> 
[<varname>-hostfile FILE</varname>] [<varname>-help</varname>] [<varname>-verbose</varname>]
</codeblock>
    </section>
    <section>
      <title>Tools</title>
      <parml>
        <plentry>
          <pt><varname>analyze_session</varname></pt>
          <pd>It traces busy processes associated with a Greenplum database session. The information
            collected will be used by VMware Support for root cause analysis on hung sessions.</pd>
          <pd>Tool options:<ul id="ul_r2v_wxs_cpb">
              <li><varname>-sesion</varname>: Greenplum session ID which is referenced in
                pg_stat_activity.</li>
              <li><varname>-master-dir</varname>: Working directory for master process.</li>
              <li><varname>-segment-dir</varname>: Working directory for segment processes.</li>
              <li><varname>-free-space</varname>: Free space threshold which will exit log
                collection if reached. Default value is 10%.</li>
              <li><varname>-a</varname>: Answer Yes to all prompts.</li>
            </ul></pd>
        </plentry>
        <plentry>
          <pt><varname>catalogbackup</varname></pt>
          <pd>For VMware Support use only. Backup catalog prior to performing catalog repairs.</pd>
        </plentry>
        <plentry>
          <pt><varname>gp_log_collector</varname>
          </pt>
          <pd>
            <p>It collects Greenplum and system log files, along with the relevant configuration
              parameters, and generates a file which can be provided to VMware Customer Support for
              diagnosis of errors or system failures.</p>
          </pd>
          <pd>Tool options:<ul id="ul_y3q_nys_cpb">
              <li><varname>-failed-segs</varname>: It scans
                  <varname>gp_configuration_history</varname> to identify when a segment fails over
                to their mirrors or simply fails without explanation. The relevant content ID logs
                will be collected.</li>
              <li><varname>-free-space</varname>: Free space threshold which will exit log
                collection if reached. Default value is 10%.</li>
              <li><varname>-c</varname>: Comma seperated list of content IDs to collect logs
                from.</li>
              <li><varname>-hostfile</varname>: Hostfile with a list of hostnames to collect logs
                from.</li>
              <li><varname>-h</varname>: Comma seperated list of hostnames to collect logs
                from.</li>
              <li><varname>-start</varname>: Start date for logs to collect (defaults to current
                date).</li>
              <li><varname>-end</varname>: End date for logs to collect (defaults to current
                date).</li>
              <li><varname>-a</varname>: Answer Yes to all prompts.</li>
              <li><varname>-dir</varname>: Working directory (defaults to current directory).</li>
              <li><varname>-segdir</varname>: Segment temporary directory (defaults to /tmp).</li>
              <li><varname>-skip-master</varname>: Skip Greenplum Master log collection. Use when
                only Greenplum Segment logs are required.</li>
              <li><varname>-with-gptext</varname>: Collect all GPText logs along with the Greenplum
                logs.</li>
              <li><varname>-with-gptext-only</varname>: Only Collect GPText logs.</li>
            </ul></pd>
        </plentry>
        <plentry>
          <pt><varname>gpcheckcat</varname></pt>
          <pd>For VMware Support use only. GPDB gpcheckcat log analysis.</pd>
        </plentry>
        <plentry>
          <pt><varname>gpcheckup</varname></pt>
          <pd>For VMware Support use only. GPDB Health Check.</pd>
        </plentry>
        <plentry>
          <pt><varname>gpstatscheck</varname></pt>
          <pd>It verifies if all tables involved in a query have optimal statistics if a query is
            running slower than expected. If outdated or invalid statistics are being used,it will
            advice if <codeph>analyze</codeph> needs to be run.</pd>
          <pd>Tool options:<ul id="ul_bsv_vzs_cpb">
              <li><varname>-f</varname>: File containing the query to analyze.</li>
              <li><varname>-p </varname>: Database port.</li>
              <li><varname>-d</varname>: Database where the query is being run.</li>
            </ul></pd>
        </plentry>
        <plentry>
          <pt><varname>packcore</varname></pt>
          <pd>It collects all the necessary files and generates a script to run the
              <codeph>gdb</codeph> command that makes a core file readable by an external host. It
            is used when VMware Support needs to collect core files generated by the Greenplum
            processes.</pd>
          <pd>Tool command:<ul id="ul_k5d_f1t_cpb">
              <li><varname>collect</varname>: Collect core file and associated libraries.</li>
            </ul></pd>
          <pd>Tool options:<ul id="ul_hlt_21t_cpb">
              <li><varname>-core</varname>: Corefile name.</li>
              <li><varname>-binary</varname>: Binary name that generated the core file. </li>
              <li><varname>-keep_tmp_dir</varname>: Do not delete temp directory.</li>
              <li><varname>-ignore_missing</varname>: Ignore missing libraries.</li>
            </ul></pd>
        </plentry>
        <plentry>
          <pt><varname>primarymirror_lengths</varname></pt>
          <pd>For VMware Support use only. Check if primary and mirror AO and AOCO relfiles are the
            correct lengths.</pd>
        </plentry>
        <plentry>
          <pt><varname>tablecollect</varname></pt>
          <pd>For VMware Support use only. Collect data and index files for data corruption
            RCA.</pd>
        </plentry>
      </parml>
    </section>
    <section>
      <title>Options</title>
      <parml>
        <plentry>
          <pt><varname>hostfile</varname></pt>
          <pd>Generate hostfiles for use with other tools.</pd>
        </plentry>
        <plentry>
          <pt><varname>replcheck</varname></pt>
          <pd>Check if tool is replicated to all hosts.</pd>
        </plentry>
        <plentry>
          <pt><varname>replicate</varname>
          </pt>
          <pd>Replicate tool to all hosts.</pd>
        </plentry>
        <plentry>
          <pt><varname>version</varname></pt>
          <pd>Displays the GPMT version.</pd>
        </plentry>
        <plentry>
          <pt><varname>-hostfile</varname></pt>
          <pd>Limits the hosts where the tool will be run.</pd>
        </plentry>
        <plentry>
          <pt><varname> -help</varname></pt>
          <pd>Displays the online help.</pd>
        </plentry>
        <plentry>
          <pt><varname> -verbose</varname></pt>
          <pd>Print verbose log messages.</pd>
        </plentry>
      </parml>
    </section>
    <section>
      <title>Notes</title>
      <parml>
        <plentry>
          <pt><varname>gpmt analyze_session</varname></pt>
          <pd>The tool prompt gives a high-level list of only the servers that are running busy
            processes and how processes are distributed across the Greenplum hosts. This gives an
            idea of what hosts are busier than others, which might be caused by processing skew or
            other environmental issue with the affected hosts. </pd>
          <pd><codeph>lsof, strace, pstack, gcore, gdb</codeph> must be installed on all hosts.
              <codeph>gcore</codeph> will perform a memory dump of the Greenplum process and the
            size could be anywhere from 300MB to several Gigabytes. Isolating which hosts to collect
            using the <codeph>gpmt</codeph>global option <codeph>-hostfile</codeph> to limit the
            collection size.</pd>
        </plentry>
        <plentry>
          <pt><varname>gpmt gp_log_collector</varname></pt>
          <pd>Hostnames provided through <codeph>-hostfile</codeph> or <codeph>-h</codeph> must
            match the hostname column in<codeph> gp_segment_configuration</codeph>.</pd>
          <pd>The tool also collects the following information, as long as the user running it has
            enough permissions:</pd>
        </plentry>
      </parml>
    </section>
    <table frame="all" rowsep="1" colsep="1" id="table_j32_5yx_bpb">
      <title>Files collected by gp_log_collection tool</title>
      <tgroup cols="2">
        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
        <thead>
          <row>
            <entry>Source</entry>
            <entry>Files and outputs</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>Database parameters</entry>
            <entry>
              <ul id="ul_kmg_vyx_bpb">
                <li><codeph>version</codeph></li>
                <li><codeph>uptime</codeph></li>
                <li><codeph>pg_settings</codeph></li>
                <li><codeph>pg_resqueue</codeph></li>
                <li><codeph>pg_database</codeph></li>
                <li><codeph>gp_segment_configuration</codeph></li>
                <li><codeph>gp_configuration_history</codeph></li>
              </ul>
            </entry>
          </row>
          <row>
            <entry>Segment servers parameters</entry>
            <entry>
              <ul id="ul_cgk_wyx_bpb">
                <li><codeph>uname -a</codeph></li>
                <li><codeph>sysctl -a</codeph></li>
                <li><codeph>psaux</codeph></li>
                <li><codeph>netstat -rn</codeph></li>
                <li><codeph>netstat -i</codeph></li>
                <li><codeph>lsof</codeph></li>
                <li><codeph>ifconfig</codeph></li>
                <li><codeph>free</codeph></li>
                <li><codeph>df -h</codeph></li>
              </ul>
            </entry>
          </row>
          <row>
            <entry>System files from all hosts</entry>
            <entry>
              <ul id="ul_pcy_1zx_bpb">
                <li><codeph>/etc/redhat-release</codeph></li>
                <li><codeph>/etc/sysctl.conf</codeph></li>
                <li><codeph>/etc/sysconfig/network</codeph></li>
                <li><codeph>/etc/security/limits.conf</codeph></li>
              </ul>
            </entry>
          </row>
          <row>
            <entry>Database related files from all hosts</entry>
            <entry>
              <ul id="ul_e45_bzx_bpb">
                <li><codeph>$SEG_DIR/pg_hba.conf</codeph></li>
                <li><codeph>$SEG_DIR/pg_log/</codeph></li>
                <li><codeph>$SEG_DIRE/postgresql.conf</codeph></li>
                <li><codeph>~/gpAdminLogs</codeph></li>
              </ul>
            </entry>
          </row>
          <row>
            <entry>GPText files</entry>
            <entry>
              <ul id="ul_ug1_dzx_bpb">
                <li>Installation configuration file
                    <codeph>$GPTXTHOME/lib/python/gptextlib/consts.py</codeph></li>
                <li><codeph>gptext-state -D</codeph></li>
                <li><codeph>&lt;gptext data dir>/solr*/solr.in</codeph></li>
                <li><codeph>&lt;gptext data dir>/solr*/log4j.properties</codeph></li>
                <li><codeph>&lt;gptext data dir>/zoo*/logs/*</codeph></li>
                <li><codeph>commands/bash/-c_echo $PATH</codeph></li>
                <li><codeph>commands/bash/-c_ps -ef | grep solr</codeph></li>
                <li><codeph>commands/bash/-c_ps -ef | grep zookeeper</codeph></li>
              </ul>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <section>
      <title>Examples</title>
      <ul id="ul_x1j_ydt_cpb">
        <li>Collect process information for a given GPDB session
          id:<codeblock>gpmt analyze_session -session 12345</codeblock></li>
        <li>Collect Greenplum master and segment logs listed in a hostfile from
          today:<codeblock>gpmt gp_log_collector -hostfile ~/gpconfig/hostfile</codeblock></li>
        <li>Collect logs for any segments marked down from 21-03-2016 until
          today:<codeblock>gpmt gp_log_collector -failed-segs -start 2016-03-21</codeblock></li>
        <li>Collect logs from host <codeph>sdw2.gpdb.local</codeph> between 2016-03-21 and
          2016-03-23:<codeblock>gpmt gp_log_collector -failed-segs -start 2016-03-21 -end 2016-03-21</codeblock></li>
        <li>Collect only GPText logs for all segments, without any Greenplum
          logs:<codeblock>gpmt gp_log_collector -with-gptext-only</codeblock></li>
        <li>Collect core info for <codeph>core.1234</codeph> for binary
            <codeph>/usr/local/greenplum-db/bin/postgres</codeph>.<codeblock>gpmt packcore -cmd collect -core core.1234 -binary /usr/local/greenplum-db/bin/postgres</codeblock></li>
        <li>Execute the query in <codeph>query1.sql</codeph> in database <codeph>Postgres</codeph>
          and check for missing stats.
          <codeblock>gpmt gpstatscheck -f query1.sql -d postgres</codeblock>If invalid statistics
          are detected the tool will generate a script listing the suggested commands to run. For
          example:<codeblock>$ cat gpstatscheck_20160926_134946.sql
ANALYZE public.nums;</codeblock>You
          can then run the provided script against the affected
          database:<codeblock>$ psql -p 5432 -d postgres -f gpstatscheck_20160926_134946.sql</codeblock></li>
      </ul>
    </section>
  </body></topic>
