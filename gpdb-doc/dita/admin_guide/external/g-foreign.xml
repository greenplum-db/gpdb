<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic1">
  <title id="im177965">Accessing External Data with Foreign Tables</title>
  <body>
    <p>Greenplum Database implements portions of the SQL/MED specification,
     allowing you to access data that resides outside of Greenplum using
     regular SQL queries. Such data is referred to as <i>foreign</i> or
     external data.</p>
    <p>You can access foreign data with help from a <i>foreign-data wrapper</i>.
      A foreign-data wrapper is a library that communicates with a remote
      data source. This library hides the source-specific connection and data
      access details.</p>
    <p>The Greenplum Database distribution includes the
      <xref href="../../ref_guide/modules/postgres_fdw.xml" format="dita" scope="peer">postgres_fdw</xref>
       foreign-data wrapper.</p>
    <p>If none of the existing PostgreSQL or Greenplum Database foreign-data wrappers suit
      your needs, you can write your own as described in <xref href="g-devel-fdw.xml#topic1"/>.</p>
    <p>To access foreign data, you create a <i>foreign server</i> object,
      which defines how to connect to a particular remote data source
      according to the set of options used by its supporting foreign-data
      wrapper. Then you create one or more <i>foreign tables</i>, which
      define the structure of the remote data. A foreign table can be used in
      queries just like a normal table, but a foreign table has no storage in
      the Greenplum Database server. Whenever a foreign table is accessed,
      Greenplum Database asks the foreign-data wrapper to fetch data from, or
      update data in (if supported by the wrapper), the remote source.</p>
    <p>Accessing remote data may require authenticating to the remote data
      source. This information can be provided by a <i>user mapping</i>,
      which can provide additional data such as a user name and password
      based on the current Greenplum Database role.</p>
    <p>For additional information, refer to the
       <xref href="../../ref_guide/sql_commands/CREATE_FOREIGN_DATA_WRAPPER.xml#topic1"/>,
       <xref href="../../ref_guide/sql_commands/CREATE_SERVER.xml#topic1"/>,
       <xref href="../../ref_guide/sql_commands/CREATE_USER_MAPPING.xml#topic1"/>,
        and <xref href="../../ref_guide/sql_commands/CREATE_FOREIGN_TABLE.xml#topic1"/>
        SQL reference pages.</p>
  </body>
  <topic id="greenplum">
    <title>Using Foreign-Data Wrappers with Greenplum Database</title>
    <body>
      <p>Most PostgreSQL foreign-data wrappers should work with Greenplum
        Database. However, PostgreSQL foreign-data wrappers connect only through 
        the Greenplum Database master by default and do not access the Greenplum Database 
        segment instances directly.</p>
      <p>Greenplum Database adds an <codeph>mpp_execute</codeph> option to FDW-related
        SQL commands. If the foreign-data wrapper supports it, you can specify
        <codeph>mpp_execute '<i>value</i>'</codeph> in the <codeph>OPTIONS</codeph> clause
        when you create the FDW, server, or foreign table to identify the Greenplum host
        from which the foreign-data wrapper reads or writes data. Valid
        <codeph><i>value</i></codeph>s are:</p>
        <ul>
          <li><codeph>master</codeph> (the default)—Read or write data from the master host.</li>
          <li><codeph>any</codeph>—Read data from either the master host or any one segment,
            depending on which path costs less.</li>
          <li><codeph>all segments</codeph>—Read or write data from all segments. If a foreign-data
            wrapper supports this value, for correct results it should have a policy that matches
            segments to data.</li>
        </ul>
      <p>(A PostgreSQL foreign-data wrapper may work with the various <codeph>mpp_execute</codeph>
        option settings, but the results are not guaranteed to be correct. For example,
        a segment may not be able to connect to the foriegn server, or segments may receive
        overlapping results resulting in duplicate rows.)</p>
      <note>GPORCA does not support foreign tables, a query on a foreign table
        always falls back to the Postgres Planner.</note>
    </body>
  </topic>
</topic>
