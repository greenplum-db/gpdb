<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
    <title id="eh20941">SELECT INTO</title>
    <body>
        <p id="sql_command_desc">Defines a new table from the results of a query.</p>
        <section id="section2">
            <title>Synopsis</title>
            <codeblock id="sql_command_synopsis">[ WITH [ RECURSIVE<sup>1</sup> ] &lt;with_query> [, ...] ]
SELECT [ALL | DISTINCT [ON ( &lt;expression> [, ...] )]]
    * | &lt;expression> [AS &lt;output_name>] [, ...]
    INTO [TEMPORARY | TEMP] [TABLE] &lt;new_table>
    [FROM &lt;from_item> [, ...]]
    [WHERE &lt;condition>]
    [GROUP BY &lt;expression> [, ...]]
    [HAVING &lt;condition> [, ...]]
    [{UNION | INTERSECT | EXCEPT} [ALL] &lt;select>]
    [ORDER BY &lt;expression> [ASC | DESC | USING &lt;operator>] [NULLS {FIRST | LAST}] [, ...]]
    [LIMIT {&lt;count> | ALL}]
    [OFFSET &lt;start>]
    [FOR {UPDATE | SHARE} [OF &lt;table_name> [, ...]] [NOWAIT] 
    [...]]</codeblock>
        </section>
        <section id="section3">
            <p><b>Note:</b>
                <sup>1</sup>The <codeph>RECURSIVE</codeph> keyword is a Beta feature.</p>
            <title>Description</title>
            <p><codeph>SELECT INTO</codeph> creates a new table and fills it with data computed by a
                query. The data is not returned to the client, as it is with a normal
                    <codeph>SELECT</codeph>. The new table's columns have the names and data types
                associated with the output columns of the <codeph>SELECT</codeph>. </p>
            <p>The <codeph>RECURSIVE</codeph> keyword can be enabled by setting the server
                configuration parameter <codeph>gp_recursive_cte_prototype</codeph> to
                    <codeph>true</codeph>.<note type="note">The <codeph>RECURSIVE</codeph> keyword
                    is a Beta feature.</note></p>
        </section>
        <section id="section4">
            <title>Parameters</title>
            <p>The majority of parameters for <codeph>SELECT INTO</codeph> are the same as
                        <xref href="SELECT.xml#topic1" type="topic" format="dita"
                />. </p>
            <parml>
                <plentry>
                    <pt>TEMPORARY</pt>
                    <pt>TEMP</pt>
                    <pd>If specified, the table is created as a temporary table.</pd>
                </plentry>
                <plentry>
                    <pt><varname>new_table</varname></pt>
                    <pd>The name (optionally schema-qualified) of the table to be created.</pd>
                </plentry>
            </parml>
        </section>
        <section id="section5">
            <title>Examples</title>
            <p>Create a new table <codeph>films_recent</codeph> consisting of only recent entries
                from the table <codeph>films</codeph>: </p>
            <codeblock>SELECT * INTO films_recent FROM films WHERE date_prod &gt;= 
'2016-01-01';</codeblock>
        </section>
        <section id="section6">
            <title>Compatibility</title>
            <p>The SQL standard uses <codeph>SELECT INTO</codeph> to represent selecting values into
                scalar variables of a host program, rather than creating a new table. The Greenplum
                Database usage of <codeph>SELECT INTO</codeph> to represent table creation is
                historical. It is best to use <xref href="CREATE_TABLE_AS.xml#topic1"
                        type="topic" format="dita"/> for this purpose in new
                applications.</p>
        </section>
        <section id="section7">
            <title>See Also</title>
            <p><xref href="SELECT.xml#topic1" type="topic" format="dita"/>,
                        <xref href="CREATE_TABLE_AS.xml#topic1" type="topic" format="dita"
                    /></p>
        </section>
    </body>
</topic>
