CREATE TABLE leadlagtbl (a int, b text) DISTRIBUTED RANDOMLY;
INSERT INTO leadlagtbl SELECT 1, 'a';
CREATE VIEW lagview1 AS SELECT lag(1::bigint) OVER (ORDER BY b) as lag FROM leadlagtbl;
CREATE VIEW lagview2 AS SELECT lag(b, 1::bigint, b) OVER (ORDER BY b) as lag FROM leadlagtbl;
CREATE VIEW lagview3 AS SELECT lag(b, 1::bigint) OVER (ORDER BY b) as lag FROM leadlagtbl;

CREATE VIEW leadview1 AS SELECT lead(1::bigint) OVER (ORDER BY b) as lag FROM leadlagtbl;
CREATE VIEW leadview2 AS SELECT lead(b, 1::bigint, b) OVER (ORDER BY b) as lag FROM leadlagtbl;
CREATE VIEW leadview3 AS SELECT lead(b, 1::bigint) OVER (ORDER BY b) as lag FROM leadlagtbl;

-- If there is a view which uses bigint data type for lead/lag functions, it must not be upgraded
! ./gpdb6/bin/pg_upgrade --mode=dispatcher --old-gp-dbid=1 --new-gp-dbid=1 --check --old-bindir=@upgrade_test_path@/gpdb5/bin --new-bindir=@upgrade_test_path@/gpdb6/bin --old-datadir=@upgrade_test_path@/gpdb5-data/qddir/demoDataDir-1 --new-datadir=@upgrade_test_path@/gpdb6-data/qddir/demoDataDir-1 --old-port=@old_port@;

CREATE TABLE problematic_views(colinfo text);
! /bin/cat view_lead_lag_functions.txt | tail -n +2 > @upgrade_test_path@/temp_tables_with_problematic_views ;
COPY problematic_views FROM '@upgrade_test_path@/temp_tables_with_problematic_views';
SELECT * FROM problematic_views ORDER BY 1;

DROP VIEW lagview2;
DROP VIEW lagview3;
DROP VIEW leadview2;
DROP VIEW leadview3;
