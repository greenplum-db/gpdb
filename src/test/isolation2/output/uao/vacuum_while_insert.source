-- @Description Ensures that a vacuum during insert operations is ok
--
DROP TABLE IF EXISTS ao;
DROP TABLE
CREATE TABLE ao (a INT) USING @amname@;
CREATE TABLE
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000
insert into ao select generate_series(1,1000);
INSERT 0 1000

DELETE FROM ao WHERE a < 128;
DELETE 2667
1: BEGIN;
BEGIN
1>: insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;COMMIT;  <waiting ...>
4: BEGIN;
BEGIN
4>: insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000) ;COMMIT;  <waiting ...>
2: VACUUM ao;
VACUUM
1<:  <... completed>
COMMIT
4<:  <... completed>
COMMIT
3: SELECT COUNT(*) FROM ao WHERE a = 1500;
 count 
-------
 40    
(1 row)
3: INSERT INTO ao VALUES (0);
INSERT 0 1

-- test insert while vacuum if no segfile include in vacuum.
-- insert transaction can choose old segfile to insert instead of using new segfile.
DROP TABLE IF EXISTS ao_insert;
DROP TABLE
CREATE TABLE ao_insert (a INT) USING @amname@;
CREATE TABLE
insert into ao_insert select generate_series(1,1000);
INSERT 0 1000
SELECT gp_inject_fault('vacuum_ao_after_compact', 'suspend', dbid) FROM gp_segment_configuration WHERE content = 0 AND role = 'p';
 gp_inject_fault 
-----------------
 Success:        
(1 row)
3: SELECT segment_id, segno, tupcount, state FROM gp_ao_or_aocs_seg('ao_insert');
 segment_id | segno | tupcount | state 
------------+-------+----------+-------
 0          | 1     | 338      | 1     
 1          | 1     | 322      | 1     
 2          | 1     | 340      | 1     
(3 rows)
3&: VACUUM ao_insert;  <waiting ...>
SELECT gp_wait_until_triggered_fault('vacuum_ao_after_compact', 1, dbid) from gp_segment_configuration where content = 0 and role = 'p';
 gp_wait_until_triggered_fault 
-------------------------------
 Success:                      
(1 row)
1: BEGIN;
BEGIN
1: insert into ao_insert select generate_series(1001,2000);
INSERT 0 1000
1: COMMIT;
COMMIT
SELECT gp_inject_fault('vacuum_ao_after_compact', 'reset', dbid) from gp_segment_configuration where content = 0 and role = 'p';
 gp_inject_fault 
-----------------
 Success:        
(1 row)
3<:  <... completed>
VACUUM
SELECT segment_id, segno, tupcount, state FROM gp_ao_or_aocs_seg('ao_insert');
 segment_id | segno | tupcount | state 
------------+-------+----------+-------
 1          | 1     | 656      | 1     
 2          | 1     | 671      | 1     
 0          | 1     | 673      | 1     
(3 rows)
