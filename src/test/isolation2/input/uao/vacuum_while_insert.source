-- @Description Ensures that a vacuum during insert operations is ok
-- 
DROP TABLE IF EXISTS ao;
CREATE TABLE ao (a INT) USING @amname@;
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);
insert into ao select generate_series(1,1000);

DELETE FROM ao WHERE a < 128;
1: BEGIN;
1>: insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;COMMIT;
4: BEGIN;
4>: insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;insert into ao select generate_series(1001,2000);insert into ao select generate_series(1001,2000)
    ;COMMIT;
2: VACUUM ao;
1<:
4<:
3: SELECT COUNT(*) FROM ao WHERE a = 1500;
3: INSERT INTO ao VALUES (0);

-- test insert while vacuum if no segfile include in vacuum. 
-- insert transaction can choose old segfile to insert instead of using new segfile.
DROP TABLE IF EXISTS ao_insert;
CREATE TABLE ao_insert (a INT) USING @amname@;
insert into ao_insert select generate_series(1,1000);
SELECT gp_inject_fault('vacuum_ao_after_compact', 'suspend', dbid) FROM gp_segment_configuration WHERE content = 0 AND role = 'p';
3: SELECT segment_id, segno, tupcount, state FROM gp_ao_or_aocs_seg('ao_insert');
3&: VACUUM ao_insert;
SELECT gp_wait_until_triggered_fault('vacuum_ao_after_compact', 1, dbid) from gp_segment_configuration where content = 0 and role = 'p';
1: BEGIN;
1: insert into ao_insert select generate_series(1001,2000);
1: COMMIT;
SELECT gp_inject_fault('vacuum_ao_after_compact', 'reset', dbid) from gp_segment_configuration where content = 0 and role = 'p';
3<:
SELECT segment_id, segno, tupcount, state FROM gp_ao_or_aocs_seg('ao_insert');
