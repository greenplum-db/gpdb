-- start_ignore
! gpconfig -c gp_max_parallel_cursors -v 3
! gpstop -rai;
-- end_ignore

-- @Description Tests concurrency for the PARALLEL RETRIEVE CURSOR statement
--
DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (a INT) DISTRIBUTED by (a);
insert into t1 select generate_series(1,100);

-- Test: concurrency limit in the same session
BEGIN;
DECLARE c1 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
DECLARE c2 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
DECLARE c3 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
COMMIT;

BEGIN;
DECLARE c1 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
DECLARE c2 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
DECLARE c3 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
DECLARE c4 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
COMMIT;

-- Test: concurrency limit in different session
1: BEGIN;
1: DECLARE c1 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
1: DECLARE c2 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
2: BEGIN;
2: DECLARE c1 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
2: DECLARE c2 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
2: ABORT;
1: DECLARE c3 PARALLEL RETRIEVE CURSOR FOR SELECT * FROM t1;
1: COMMIT;

-- start_ignore
! gpconfig -c gp_max_parallel_cursors -v -1
! gpstop -rai;
-- end_ignore