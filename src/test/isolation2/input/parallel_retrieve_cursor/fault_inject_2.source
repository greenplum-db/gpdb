-- @Description Tests with faut inject
--
DROP TABLE IF EXISTS t2;
CREATE TABLE t2 (a INT) DISTRIBUTED by (a);
insert into t2 select generate_series(1,10000000);

-- Test1: error inject at the 1000th time while retrieving tuples from endpoint. other retrieve session finished.
-- This test may cause GPDB hang/crash on MacOS because the UDP thread receive signal which shouldn't.
-- (OS-X pthread_sigmask is broken: MPP-4923).
1: SELECT gp_inject_fault('fetch_tuples_from_endpoint', 'reset', 3);
1: SELECT gp_inject_fault('fetch_tuples_from_endpoint', 'interrupt', '', '', '', 1000, 1000, 0, 3::smallint);

1: BEGIN;
1: DECLARE c1 PARALLEL RETRIEVE CURSOR FOR SELECT * from t2;
1: @post_run 'parse_endpoint_info 6 1 2 3 4' : SELECT endpointname,auth_token,hostname,port,state FROM gp_endpoints() WHERE cursorname='c1';
1&: SELECT * FROM gp_wait_parallel_retrieve_cursor('c1');

0U: SELECT state FROM gp_segment_endpoints() WHERE cursorname='c1';
0R&: @pre_run 'set_endpoint_variable @ENDPOINT6': RETRIEVE ALL FROM ENDPOINT "@ENDPOINT6";

2U: SELECT state FROM gp_segment_endpoints() WHERE cursorname='c1';
2R&: @pre_run 'set_endpoint_variable @ENDPOINT6': RETRIEVE ALL FROM ENDPOINT "@ENDPOINT6";

1U: SELECT state FROM gp_segment_endpoints() WHERE cursorname='c1';
1R: @pre_run 'set_endpoint_variable @ENDPOINT6': RETRIEVE ALL FROM ENDPOINT "@ENDPOINT6";

1<:

0R<:
2R<:

1<:
1: ROLLBACK;
1: SELECT gp_inject_fault('fetch_tuples_from_endpoint', 'reset', 3);

DROP TABLE t2;
