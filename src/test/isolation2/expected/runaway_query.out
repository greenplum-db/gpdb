CREATE EXTENSION IF NOT EXISTS gp_inject_fault;
CREATE
CREATE OR REPLACE LANGUAGE plpgsql;
CREATE

CREATE TABLE runaway_query_test_table(a bigint NOT NULL) DISTRIBUTED BY (a);
CREATE

-- Use vmem_protect_limit fault to simulate vmem protect error and force cancel query.
SELECT gp_inject_fault_infinite('gpdbwrappers_get_comparison_operator', 'vmem_protect_limit', 1);
 gp_inject_fault_infinite 
--------------------------
 Success:                 
(1 row)

-- Run query that will trip the vmem protect limit fault.
EXPLAIN (COSTS OFF) SELECT a FROM runaway_query_test_table WHERE (a = ANY ((ARRAY[42])));
 QUERY PLAN                                    
-----------------------------------------------
 Gather Motion 1:1  (slice1; segments: 1)      
   ->  Seq Scan on runaway_query_test_table    
         Filter: (a = ANY ('{42}'::integer[])) 
 Optimizer: Postgres query optimizer           
(4 rows)

-- start_ignore
SELECT gp_inject_fault('all', 'reset', dbid) FROM gp_segment_configuration;
 gp_inject_fault 
-----------------
 Success:        
 Success:        
 Success:        
 Success:        
 Success:        
 Success:        
 Success:        
 Success:        
(8 rows)
-- end_ignore
