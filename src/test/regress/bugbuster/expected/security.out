-- ***** From TIME_BASED_CONSTRAINT suite *****
CREATE USER invalidUser1 WITH LOGIN DENY BETWEEN DAY 'Monday' TIME '00:00' AND DAY 'Monday' TIME '25:00';
ERROR:  date/time field value out of range: "25:00"
CREATE USER invalidUser2 WITH LOGIN DENY BETWEEN DAY 'Monday' TIME '01:65 AM' AND DAY 'Monday' TIME '12:00 PM';
ERROR:  date/time field value out of range: "01:65 AM"
CREATE USER invalidUser3 WITH LOGIN DENY BETWEEN DAY 'Monday' TIME '-01:00' AND DAY 'Monday' TIME '06:00 PM';
ERROR:  invalid input syntax for type time: "-01:00"
CREATE ROLE invalidRole1 WITH LOGIN DENY BETWEEN DAY 'Monday' TIME '00:00' AND DAY 'Monday' TIME '25:00';
ERROR:  date/time field value out of range: "25:00"
CREATE ROLE invalidRole2 WITH LOGIN DENY BETWEEN DAY 'Monday' TIME '01:65 AM' AND DAY 'Monday' TIME '12:00 PM';
ERROR:  date/time field value out of range: "01:65 AM"
CREATE ROLE invalidRole3 WITH LOGIN DENY BETWEEN DAY 'Monday' TIME '-01:00' AND DAY 'Monday' TIME '06:00 PM';
ERROR:  invalid input syntax for type time: "-01:00"
--start_ignore
DROP USER IF EXISTS testuser1;
NOTICE:  role "testuser1" does not exist, skipping
NOTICE:  role "testuser1" does not exist, skipping  (seg0 usensimiobmbp.corp.emc.com:18506 pid=27927)
NOTICE:  role "testuser1" does not exist, skipping  (seg2 usensimiobmbp.corp.emc.com:18508 pid=27929)
NOTICE:  role "testuser1" does not exist, skipping  (seg1 usensimiobmbp.corp.emc.com:18507 pid=27928)
DROP USER IF EXISTS testuser2;
--end_ignore
CREATE USER testuser1 WITH LOGIN NOSUPERUSER NOCREATEROLE;
NOTICE:  resource queue required -- using default resource queue "pg_default"
CREATE USER testuser2 WITH LOGIN DENY DAY 6;
NOTICE:  resource queue required -- using default resource queue "pg_default"
--start_ignore
DROP USER IF EXISTS testuser2;
--end_ignore
CREATE USER testuser2 WITH LOGIN DENY DAY 'Saturday';
NOTICE:  resource queue required -- using default resource queue "pg_default"
--start_ignore
DROP USER IF EXISTS testuser1;
--end_ignore
CREATE USER testuser1 WITH LOGIN DENY DAY 'Monday';
NOTICE:  resource queue required -- using default resource queue "pg_default"
SELECT COUNT(*)
FROM pg_auth_time_constraint d join pg_roles r ON (d.authid = r.oid)
WHERE r.rolname in ('testuser1');
 count 
-------
     1
(1 row)

ALTER USER testuser1 DROP DENY FOR DAY 'Tuesday';
ERROR:  cannot find matching DENY rules for "testuser1"
--start_ignore
DROP USER testuser1;
--end_ignore
-- ***** From PASSWORD_ENCRYPTION suite *****
show password_hash_algorithm;
 password_hash_algorithm 
-------------------------
 MD5
(1 row)

set password_hash_algorithm = 'MD5';
show password_hash_algorithm;
 password_hash_algorithm 
-------------------------
 MD5
(1 row)

--start_ignore
drop role if exists md5_role1;
--end_ignore
create role md5_role1 with password 'md5password' login;
NOTICE:  resource queue required -- using default resource queue "pg_default"
select rolname,rolpassword from pg_authid where rolname like 'md5%' order by rolname;
  rolname  |             rolpassword             
-----------+-------------------------------------
 md5_role1 | md559e477d4fa221a7655b646dabb6ec7d7
(1 row)

show password_hash_algorithm;
 password_hash_algorithm 
-------------------------
 MD5
(1 row)

set password_hash_algorithm = 'SHA-256';
show password_hash_algorithm;
 password_hash_algorithm 
-------------------------
 SHA-256
(1 row)

--start_ignore
drop role if exists sha256_role1;
--end_ignore
create role sha256_role1 with password 'sha256password' login;
NOTICE:  resource queue required -- using default resource queue "pg_default"
select rolname,rolpassword from pg_authid where rolname like 'sha256%' order by rolname;
   rolname    |  rolpassword   
--------------+----------------
 sha256_role1 | sha256password
(1 row)

