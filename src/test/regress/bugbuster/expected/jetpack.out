CREATE TABLE toolkit_ao (id INTEGER) WITH (appendonly = true);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE toolkit_heap (id INTEGER) WITH (appendonly = false);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE TABLE toolkit_aopart (
            N_NATIONKEY INTEGER,
            N_NAME CHAR(25),
            N_REGIONKEY INTEGER,
            N_COMMENT VARCHAR(152)
            )
partition by range (n_nationkey)
subpartition by range (n_regionkey) subpartition template (start('0') end('1') inclusive,start('1') exclusive
)
(
partition p1 start('0') end('10') WITH (appendonly=true,checksum=true,compresslevel=9), partition p2 start('10') end('25') WITH (checksum=false,appendonly=true,compresslevel=7)
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'n_nationkey' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "toolkit_aopart_1_prt_p1" for table "toolkit_aopart"
NOTICE:  CREATE TABLE will create partition "toolkit_aopart_1_prt_p2" for table "toolkit_aopart"
NOTICE:  CREATE TABLE will create partition "toolkit_aopart_1_prt_p1_2_prt_1" for table "toolkit_aopart_1_prt_p1"
NOTICE:  CREATE TABLE will create partition "toolkit_aopart_1_prt_p1_2_prt_2" for table "toolkit_aopart_1_prt_p1"
NOTICE:  CREATE TABLE will create partition "toolkit_aopart_1_prt_p2_2_prt_1" for table "toolkit_aopart_1_prt_p2"
NOTICE:  CREATE TABLE will create partition "toolkit_aopart_1_prt_p2_2_prt_2" for table "toolkit_aopart_1_prt_p2"
select count(iaotype),iaotype
from gp_toolkit.__gp_is_append_only iao
inner join pg_catalog.pg_class c on iao.iaooid = c.oid
where c.relname like 'toolkit_%'
group by iaotype;
 count | iaotype 
-------+---------
     7 | t
     2 | f
(2 rows)

drop table toolkit_aopart;
select count(iaotype),iaotype
from gp_toolkit.__gp_is_append_only iao
inner join pg_catalog.pg_class c on iao.iaooid = c.oid
where c.relname like 'toolkit_%'
group by iaotype;
 count | iaotype 
-------+---------
     1 | t
     1 | f
(2 rows)

select aunnspname from gp_toolkit.__gp_user_namespaces where aunnspname='toolkit_testschema';
 aunnspname 
------------
(0 rows)

create schema toolkit_testschema;
select aunnspname from gp_toolkit.__gp_user_namespaces where aunnspname='toolkit_testschema';
     aunnspname     
--------------------
 toolkit_testschema
(1 row)

drop schema toolkit_testschema;
select aunnspname from gp_toolkit.__gp_user_namespaces where aunnspname='toolkit_testschema';
 aunnspname 
------------
(0 rows)

select  autnspname, autrelname, autrelkind, autreltuples, autrelpages, autrelacl from gp_toolkit.__gp_user_data_tables where autrelname like 'toolkit%' order by 2;
 autnspname |  autrelname  | autrelkind | autreltuples | autrelpages | autrelacl 
------------+--------------+------------+--------------+-------------+-----------
 public     | toolkit_ao   | r          |            0 |           0 | 
 public     | toolkit_heap | r          |            0 |           0 | 
(2 rows)

create table toolkit_a (a int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table toolkit_b (b int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'b' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
select  autnspname, autrelname, autrelkind, autreltuples, autrelpages, autrelacl from gp_toolkit.__gp_user_data_tables where autrelname like 'toolkit%' order by 2;
 autnspname |  autrelname  | autrelkind | autreltuples | autrelpages | autrelacl 
------------+--------------+------------+--------------+-------------+-----------
 public     | toolkit_a    | r          |            0 |           0 | 
 public     | toolkit_ao   | r          |            0 |           0 | 
 public     | toolkit_b    | r          |            0 |           0 | 
 public     | toolkit_heap | r          |            0 |           0 | 
(4 rows)

drop table toolkit_a;
drop table toolkit_b;
select  autnspname, autrelname, autrelkind, autreltuples, autrelpages, autrelacl from gp_toolkit.__gp_user_data_tables where autrelname like 'toolkit%' order by 2;
 autnspname |  autrelname  | autrelkind | autreltuples | autrelpages | autrelacl 
------------+--------------+------------+--------------+-------------+-----------
 public     | toolkit_ao   | r          |            0 |           0 | 
 public     | toolkit_heap | r          |            0 |           0 | 
(2 rows)

select * from gp_toolkit.__gp_masterid;
 masterid 
----------
       -1
(1 row)

\d gp_toolkit.gp_log_database
           View "gp_toolkit.gp_log_database"
     Column     |           Type           | Modifiers 
----------------+--------------------------+-----------
 logtime        | timestamp with time zone | 
 loguser        | text                     | 
 logdatabase    | text                     | 
 logpid         | text                     | 
 logthread      | text                     | 
 loghost        | text                     | 
 logport        | text                     | 
 logsessiontime | timestamp with time zone | 
 logtransaction | integer                  | 
 logsession     | text                     | 
 logcmdcount    | text                     | 
 logsegment     | text                     | 
 logslice       | text                     | 
 logdistxact    | text                     | 
 loglocalxact   | text                     | 
 logsubxact     | text                     | 
 logseverity    | text                     | 
 logstate       | text                     | 
 logmessage     | text                     | 
 logdetail      | text                     | 
 loghint        | text                     | 
 logquery       | text                     | 
 logquerypos    | integer                  | 
 logcontext     | text                     | 
 logdebug       | text                     | 
 logcursorpos   | integer                  | 
 logfunction    | text                     | 
 logfile        | text                     | 
 logline        | integer                  | 
 logstack       | text                     | 
View definition:
 SELECT gp_log_system.logtime, gp_log_system.loguser, gp_log_system.logdatabase, gp_log_system.logpid, gp_log_system.logthread, gp_log_system.loghost, gp_log_system.logport, gp_log_system.logsessiontime, gp_log_system.logtransaction, gp_log_system.logsession, gp_log_system.logcmdcount, gp_log_system.logsegment, gp_log_system.logslice, gp_log_system.logdistxact, gp_log_system.loglocalxact, gp_log_system.logsubxact, gp_log_system.logseverity, gp_log_system.logstate, gp_log_system.logmessage, gp_log_system.logdetail, gp_log_system.loghint, gp_log_system.logquery, gp_log_system.logquerypos, gp_log_system.logcontext, gp_log_system.logdebug, gp_log_system.logcursorpos, gp_log_system.logfunction, gp_log_system.logfile, gp_log_system.logline, gp_log_system.logstack
   FROM gp_toolkit.gp_log_system
  WHERE gp_log_system.logdatabase = current_database()::text;

select logseverity from gp_toolkit.gp_log_database where logseverity='LOG' limit 10;
 logseverity 
-------------
 LOG
 LOG
 LOG
 LOG
 LOG
 LOG
 LOG
 LOG
 LOG
 LOG
(10 rows)

-- Test the gp_skew_idle_fractions view
create table toolkit_skew (a int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into toolkit_skew select i from generate_series(1,1000) i;
select sifnamespace, sifrelname from gp_toolkit.gp_skew_idle_fractions where sifoid = 'toolkit_skew'::regclass;
 sifnamespace |  sifrelname  
--------------+--------------
 public       | toolkit_skew
(1 row)

drop table toolkit_skew;
create schema jetpack_test;
set search_path=jetpack_test;
create table gptoolkit_user_table_heap (a int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table gptoolkit_user_table_ao (
            N_NATIONKEY INTEGER,
            N_NAME CHAR(25),
            N_REGIONKEY INTEGER,
            N_COMMENT VARCHAR(152)
            )
partition by range (n_nationkey)
subpartition by range (n_regionkey) subpartition template (start('0') end('1') inclusive,start('1') exclusive
)
(
partition p1 start('0') end('10') WITH (appendonly=true,checksum=true,compresslevel=9), partition p2 start('10') end('25') WITH (checksum=false,appendonly=true,compresslevel=7)
);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'n_nationkey' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
NOTICE:  CREATE TABLE will create partition "gptoolkit_user_table_ao_1_prt_p1" for table "gptoolkit_user_table_ao"
NOTICE:  CREATE TABLE will create partition "gptoolkit_user_table_ao_1_prt_p2" for table "gptoolkit_user_table_ao"
NOTICE:  CREATE TABLE will create partition "gptoolkit_user_table_ao_1_prt_p1_2_prt_1" for table "gptoolkit_user_table_ao_1_prt_p1"
NOTICE:  CREATE TABLE will create partition "gptoolkit_user_table_ao_1_prt_p1_2_prt_2" for table "gptoolkit_user_table_ao_1_prt_p1"
NOTICE:  CREATE TABLE will create partition "gptoolkit_user_table_ao_1_prt_p2_2_prt_1" for table "gptoolkit_user_table_ao_1_prt_p2"
NOTICE:  CREATE TABLE will create partition "gptoolkit_user_table_ao_1_prt_p2_2_prt_2" for table "gptoolkit_user_table_ao_1_prt_p2"
create table gptoolkit_user_table_co (id VARCHAR, lname CHAR(20), fname CHAR(10), tincan FLOAT
    )
 WITH (orientation='column', appendonly=true)
 DISTRIBUTED BY (id)
 ;
select autnspname,autrelname,autrelkind from gp_toolkit.__gp_user_tables where autrelname like 'gptoolkit_user_table%';
  autnspname  |                autrelname                | autrelkind 
--------------+------------------------------------------+------------
 jetpack_test | gptoolkit_user_table_heap                | r
 jetpack_test | gptoolkit_user_table_ao_1_prt_p1_2_prt_1 | r
 jetpack_test | gptoolkit_user_table_ao_1_prt_p1_2_prt_2 | r
 jetpack_test | gptoolkit_user_table_ao_1_prt_p2_2_prt_1 | r
 jetpack_test | gptoolkit_user_table_ao_1_prt_p2_2_prt_2 | r
 jetpack_test | gptoolkit_user_table_ao                  | r
 jetpack_test | gptoolkit_user_table_ao_1_prt_p1         | r
 jetpack_test | gptoolkit_user_table_ao_1_prt_p2         | r
 jetpack_test | gptoolkit_user_table_co                  | r
(9 rows)

-- Expected to have no results
-- However it will show there is a difference if segment guc is different
select * from gp_toolkit.gp_param_settings_seg_value_diffs;
 psdname | psdvalue | psdcount 
---------+----------+----------
(0 rows)

select lorlocktype,lorrelname,lormode,lorgranted from gp_toolkit.gp_locks_on_relation where lorrelname like 'pg_%';
 lorlocktype |         lorrelname          |     lormode     | lorgranted 
-------------+-----------------------------+-----------------+------------
 relation    | pg_authid                   | AccessShareLock | t
 relation    | pg_authid_oid_index         | AccessShareLock | t
 relation    | pg_authid_rolname_index     | AccessShareLock | t
 relation    | pg_authid_rolresqueue_index | AccessShareLock | t
 relation    | pg_class                    | AccessShareLock | t
 relation    | pg_class_oid_index          | AccessShareLock | t
 relation    | pg_class_relname_nsp_index  | AccessShareLock | t
 relation    | pg_database                 | AccessShareLock | t
 relation    | pg_database_datname_index   | AccessShareLock | t
 relation    | pg_database_oid_index       | AccessShareLock | t
 relation    | pg_locks                    | AccessShareLock | t
 relation    | pg_stat_activity            | AccessShareLock | t
(12 rows)

-- Test size views. We can't include the exact sizes in the output, as they differ
-- slightly depending on configuration, so just check that it's reasonable
select relname, sotusize > 50000 as sz_over50k, sotusize < 1000000 as sz_under1mb from pg_class pg, gp_toolkit.gp_size_of_table_uncompressed sotu where relname = 'toolkit_ao' and pg.relfilenode=sotu.sotuoid;
  relname   | sz_over50k | sz_under1mb 
------------+------------+-------------
 toolkit_ao | t          | t
(1 row)

select pg.relname,
       sopaidpartitiontablesize > 50000 as tblsz_over50k, sopaidpartitiontablesize < 1000000 as tblsz_under1mb,
       sopaidpartitionindexessize
from pg_class pg,gp_toolkit.gp_size_of_partition_and_indexes_disk gsopai
where pg.relfilenode=gsopai.sopaidpartitionoid and pg.relname like 'gptoolkit_user_table_ao%';
                 relname                  | tblsz_over50k | tblsz_under1mb | sopaidpartitionindexessize 
------------------------------------------+---------------+----------------+----------------------------
 gptoolkit_user_table_ao_1_prt_p1_2_prt_1 | t             | t              |                          0
 gptoolkit_user_table_ao_1_prt_p1_2_prt_2 | t             | t              |                          0
 gptoolkit_user_table_ao_1_prt_p2_2_prt_1 | t             | t              |                          0
 gptoolkit_user_table_ao_1_prt_p2_2_prt_2 | t             | t              |                          0
 gptoolkit_user_table_ao_1_prt_p1         | t             | t              |                          0
 gptoolkit_user_table_ao_1_prt_p2         | t             | t              |                          0
(6 rows)

