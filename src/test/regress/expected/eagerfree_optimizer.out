create schema eagerfree;
set search_path=eagerfree;
create table smallt (i int, t text, d date) distributed by (i);
insert into smallt select i%10, 'text ' || (i%15), '2011-01-01'::date + ((i%20) || ' days')::interval
from generate_series(0, 99) i;
analyze smallt;
create table bigt (i int, t text, d date) distributed by (i);
insert into bigt select i/10, 'text ' || (i/15), '2011-01-01'::date + ((i/20) || ' days')::interval
from generate_series(0, 999999) i;
analyze bigt;
create table smallt2 (i int, t text, d date) distributed by (i);
insert into smallt2 select i%5, 'text ' || (i%10), '2011-01-01'::date + ((i%15) || ' days')::interval
from generate_series(0, 49) i;
analyze smallt2;
set optimizer_segments = 3;
set gp_motion_cost_per_row = 0.1;
-- HashAgg, Agg
select d, count(*) from smallt group by d;
     d      | count 
------------+-------
 01-19-2011 |     5
 01-16-2011 |     5
 01-13-2011 |     5
 01-10-2011 |     5
 01-15-2011 |     5
 01-11-2011 |     5
 01-09-2011 |     5
 01-17-2011 |     5
 01-05-2011 |     5
 01-12-2011 |     5
 01-18-2011 |     5
 01-06-2011 |     5
 01-08-2011 |     5
 01-14-2011 |     5
 01-20-2011 |     5
 01-02-2011 |     5
 01-03-2011 |     5
 01-01-2011 |     5
 01-07-2011 |     5
 01-04-2011 |     5
(20 rows)

explain analyze select d, count(*) from smallt group by d;
                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..431.01 rows=20 width=12) (actual time=11.977..11.988 rows=20 loops=1)
   ->  Finalize HashAggregate  (cost=0.00..431.01 rows=7 width=12) (actual time=11.668..11.671 rows=7 loops=1)
         Group Key: d
         Peak Memory Usage: 0 kB
         ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..431.01 rows=7 width=12) (actual time=9.770..11.647 rows=7 loops=1)
               Hash Key: d
               ->  Partial GroupAggregate  (cost=0.00..431.01 rows=7 width=12) (actual time=2.740..2.795 rows=10 loops=1)
                     Group Key: d
                     ->  Sort  (cost=0.00..431.00 rows=34 width=4) (actual time=2.730..2.767 rows=50 loops=1)
                           Sort Key: d
                           Sort Method:  quicksort  Memory: 79kB
                           Executor Memory: 79kB  Segments: 3  Max: 27kB (segment 0)
                           ->  Seq Scan on smallt  (cost=0.00..431.00 rows=34 width=4) (actual time=2.687..2.702 rows=50 loops=1)
 Optimizer: Pivotal Optimizer (GPORCA)
 Planning Time: 7.565 ms
   (slice0)    Executor memory: 42K bytes.
   (slice1)    Executor memory: 19K bytes avg x 3 workers, 19K bytes max (seg1).  Work_mem: 24K bytes max.
   (slice2)    Executor memory: 39K bytes avg x 3 workers, 39K bytes max (seg0).  Work_mem: 27K bytes max.
 Memory used:  128000kB
 Execution Time: 12.708 ms
(20 rows)

select * from
  test_util.extract_plan_stats($$
select d, count(*) from smallt group by d;
  $$, false)
where stats_name = 'executor_mem_lines'
or stats_name = 'workmem_wanted_lines'
order by stats_name;
      stats_name      | stats_value 
----------------------+-------------
 executor_mem_lines   |           1
 workmem_wanted_lines |           0
(2 rows)

set statement_mem=2560;
select count(*) from (select i, t, d, count(*) from bigt group by i, t, d) tmp;
 count  
--------
 133333
(1 row)

explain analyze select count(*) from (select i, t, d, count(*) from bigt group by i, t, d) tmp;
                                                             QUERY PLAN                                                              
-------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=0.00..571.36 rows=1 width=8) (actual time=362.957..362.957 rows=1 loops=1)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..571.36 rows=1 width=8) (actual time=265.826..362.941 rows=3 loops=1)
         ->  Partial Aggregate  (cost=0.00..571.36 rows=1 width=8) (actual time=265.338..265.338 rows=1 loops=1)
               ->  HashAggregate  (cost=0.00..571.36 rows=333580 width=1) (actual time=338.390..356.986 rows=44572 loops=1)
                     Group Key: i, t, d
                     (seg0)   44435 groups total in 32 batches; 1 overflows; 44435 spill groups.
                     (seg0)   Hash chain length 2.8 avg, 10 max, using 30315 of 32768 buckets; total 9 expansions.
                     ->  Seq Scan on bigt  (cost=0.00..439.81 rows=333580 width=18) (actual time=0.026..49.692 rows=333530 loops=1)
   (slice0)    Executor memory: 386K bytes.
   (slice1)  * Executor memory: 3180K bytes avg x 3 workers, 3180K bytes max (seg0).  Work_mem: 2461K bytes max, 4866K bytes wanted.
 Memory used:  2560kB
 Memory wanted:  5265kB
 Optimizer: Pivotal Optimizer (GPORCA) version 2.67.0
 Total runtime: 363.922 ms
(14 rows)

set statement_mem=128000;
-- DQA
set gp_enable_agg_distinct=off;
set gp_enable_multiphase_agg=off;
select count(distinct d) from smallt;
 count 
-------
    20
(1 row)

explain analyze select count(distinct d) from smallt;
                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=0.00..431.01 rows=1 width=8) (actual time=2.327..2.329 rows=1 loops=1)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..431.01 rows=20 width=4) (actual time=2.307..2.317 rows=20 loops=1)
         ->  GroupAggregate  (cost=0.00..431.01 rows=7 width=4) (actual time=2.025..2.032 rows=7 loops=1)
               Group Key: d
               ->  Sort  (cost=0.00..431.01 rows=7 width=4) (actual time=2.018..2.020 rows=7 loops=1)
                     Sort Key: d
                     Sort Method:  quicksort  Memory: 75kB
                     Executor Memory: 76kB  Segments: 3  Max: 26kB (segment 1)
                     ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..431.01 rows=7 width=4) (actual time=2.006..2.010 rows=7 loops=1)
                           Hash Key: d
                           ->  GroupAggregate  (cost=0.00..431.01 rows=7 width=4) (actual time=0.227..0.258 rows=10 loops=1)
                                 Group Key: d
                                 ->  Sort  (cost=0.00..431.00 rows=34 width=4) (actual time=0.220..0.238 rows=50 loops=1)
                                       Sort Key: d
                                       Sort Method:  quicksort  Memory: 79kB
                                       Executor Memory: 79kB  Segments: 3  Max: 27kB (segment 0)
                                       ->  Seq Scan on smallt  (cost=0.00..431.00 rows=34 width=4) (actual time=0.177..0.190 rows=50 loops=1)
 Optimizer: Pivotal Optimizer (GPORCA)
 Planning Time: 7.843 ms
   (slice0)    Executor memory: 47K bytes.
   (slice1)    Executor memory: 43K bytes avg x 3 workers, 43K bytes max (seg1).  Work_mem: 26K bytes max.
   (slice2)    Executor memory: 39K bytes avg x 3 workers, 39K bytes max (seg0).  Work_mem: 27K bytes max.
 Memory used:  128000kB
 Execution Time: 3.001 ms
(24 rows)

set statement_mem=2560;
select count(distinct d) from bigt;
 count 
-------
 50000
(1 row)

explain analyze select count(distinct d) from bigt;
                                                                         QUERY PLAN                                                                         
------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=0.00..485.83 rows=1 width=8) (actual time=958.223..958.225 rows=1 loops=1)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..485.81 rows=49810 width=4) (actual time=934.172..950.796 rows=50000 loops=1)
         ->  HashAggregate  (cost=0.00..485.07 rows=16604 width=4) (actual time=933.470..944.496 rows=16746 loops=1)
               Group Key: d
               Peak Memory Usage: 0 kB
               ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..483.03 rows=16604 width=4) (actual time=381.719..920.566 rows=27966 loops=1)
                     Hash Key: d
                     ->  Streaming HashAggregate  (cost=0.00..482.82 rows=16604 width=4) (actual time=379.126..918.614 rows=27915 loops=1)
                           Group Key: d
                           Peak Memory Usage: 0 kB
                           ->  Seq Scan on bigt  (cost=0.00..439.80 rows=333334 width=4) (actual time=0.138..239.511 rows=334620 loops=1)
 Optimizer: Pivotal Optimizer (GPORCA)
 Planning Time: 8.619 ms
   (slice0)    Executor memory: 830K bytes.
   (slice1)    Executor memory: 876K bytes avg x 3 workers, 876K bytes max (seg2).  Work_mem: 1553K bytes max.
   (slice2)    Executor memory: 886K bytes avg x 3 workers, 918K bytes max (seg0).  Work_mem: 1553K bytes max.
 Memory used:  2560kB
 Execution Time: 958.835 ms
(18 rows)

set statement_mem=128000;
set gp_enable_agg_distinct=on;
set gp_enable_multiphase_agg=on;
-- Rescan on Agg (with Material in the inner side of nestloop)
-- start_ignore
-- Known_opt_diff: This test is only here for the planner. It doesn't exercise eagerfree in ORCA plans
-- end_ignore
set enable_nestloop=on;
set enable_hashjoin=off;
select t1.*, t2.* from
(select d, count(*) from smallt group by d) as t1, (select d, sum(i) from smallt group by d) as t2
where t1.d = t2.d;
     d      | count |     d      | sum 
------------+-------+------------+-----
 01-19-2011 |     5 | 01-19-2011 |  40
 01-16-2011 |     5 | 01-16-2011 |  25
 01-13-2011 |     5 | 01-13-2011 |  10
 01-10-2011 |     5 | 01-10-2011 |  45
 01-15-2011 |     5 | 01-15-2011 |  20
 01-17-2011 |     5 | 01-17-2011 |  30
 01-11-2011 |     5 | 01-11-2011 |   0
 01-09-2011 |     5 | 01-09-2011 |  40
 01-05-2011 |     5 | 01-05-2011 |  20
 01-12-2011 |     5 | 01-12-2011 |   5
 01-18-2011 |     5 | 01-18-2011 |  35
 01-06-2011 |     5 | 01-06-2011 |  25
 01-08-2011 |     5 | 01-08-2011 |  35
 01-14-2011 |     5 | 01-14-2011 |  15
 01-20-2011 |     5 | 01-20-2011 |  45
 01-02-2011 |     5 | 01-02-2011 |   5
 01-03-2011 |     5 | 01-03-2011 |  10
 01-01-2011 |     5 | 01-01-2011 |   0
 01-07-2011 |     5 | 01-07-2011 |  30
 01-04-2011 |     5 | 01-04-2011 |  15
(20 rows)

explain analyze select t1.*, t2.* from
(select d, count(*) from smallt group by d) as t1, (select d, sum(i) from smallt group by d) as t2
where t1.d = t2.d;
                                                                       QUERY PLAN                                                                       
--------------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..862.02 rows=20 width=24) (actual time=12.199..12.281 rows=20 loops=1)
   ->  Hash Join  (cost=0.00..862.02 rows=7 width=24) (actual time=11.430..11.902 rows=7 loops=1)
         Hash Cond: (smallt.d = smallt_1.d)
         Extra Text: (seg1)   Hash chain length 1.0 avg, 1 max, using 7 of 131072 buckets.
         ->  Finalize HashAggregate  (cost=0.00..431.01 rows=7 width=12) (actual time=0.130..0.134 rows=7 loops=1)
               Group Key: smallt.d
               Peak Memory Usage: 0 kB
               ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..431.01 rows=7 width=12) (actual time=0.104..0.111 rows=7 loops=1)
                     Hash Key: smallt.d
                     ->  Partial GroupAggregate  (cost=0.00..431.01 rows=7 width=12) (actual time=4.540..4.587 rows=10 loops=1)
                           Group Key: smallt.d
                           ->  Sort  (cost=0.00..431.00 rows=34 width=4) (actual time=4.527..4.547 rows=50 loops=1)
                                 Sort Key: smallt.d
                                 Sort Method:  quicksort  Memory: 79kB
                                 Executor Memory: 79kB  Segments: 3  Max: 27kB (segment 0)
                                 ->  Seq Scan on smallt  (cost=0.00..431.00 rows=34 width=4) (actual time=4.450..4.490 rows=50 loops=1)
         ->  Hash  (cost=431.01..431.01 rows=7 width=12) (actual time=11.012..11.013 rows=7 loops=1)
               Buckets: 131072  Batches: 1  Memory Usage: 1025kB
               ->  Finalize HashAggregate  (cost=0.00..431.01 rows=7 width=12) (actual time=11.001..11.004 rows=7 loops=1)
                     Group Key: smallt_1.d
                     Peak Memory Usage: 0 kB
                     ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..431.01 rows=7 width=12) (actual time=7.740..10.975 rows=7 loops=1)
                           Hash Key: smallt_1.d
                           ->  Streaming Partial HashAggregate  (cost=0.00..431.01 rows=7 width=12) (actual time=2.608..2.612 rows=10 loops=1)
                                 Group Key: smallt_1.d
                                 Peak Memory Usage: 0 kB
                                 ->  Seq Scan on smallt smallt_1  (cost=0.00..431.00 rows=34 width=8) (actual time=2.555..2.571 rows=50 loops=1)
 Optimizer: Pivotal Optimizer (GPORCA)
 Planning Time: 16.253 ms
   (slice0)    Executor memory: 83K bytes.
   (slice1)    Executor memory: 1096K bytes avg x 3 workers, 1096K bytes max (seg1).  Work_mem: 1025K bytes max.
   (slice2)    Executor memory: 40K bytes avg x 3 workers, 40K bytes max (seg0).  Work_mem: 27K bytes max.
   (slice3)    Executor memory: 38K bytes avg x 3 workers, 38K bytes max (seg0).  Work_mem: 24K bytes max.
 Memory used:  128000kB
 Execution Time: 13.241 ms
(35 rows)

select * from
  test_util.extract_plan_stats($$
select t1.*, t2.* from
(select d, count(*) from smallt group by d) as t1, (select d, sum(i) from smallt group by d) as t2
where t1.d = t2.d;
  $$, false)
where stats_name = 'executor_mem_lines'
or stats_name = 'workmem_wanted_lines'
order by stats_name;
      stats_name      | stats_value 
----------------------+-------------
 executor_mem_lines   |           1
 workmem_wanted_lines |           0
(2 rows)

set enable_nestloop=off;
set enable_hashjoin=on;
-- Rescan on Agg (with Material in the inner side of nestloop)
-- start_ignore
-- Known_opt_diff: This test is only here for the planner. It doesn't exercise eagerfree in ORCA plans
-- end_ignore
set enable_nestloop=on;
set enable_hashjoin=off;
select t1.*, t2.* from
(select i, count(*) from smallt group by i) as t1, (select i, sum(i) from smallt group by i) as t2
where t1.i = t2.i;
 i | count | i | sum 
---+-------+---+-----
 1 |    10 | 1 |  10
 3 |    10 | 3 |  30
 0 |    10 | 0 |   0
 4 |    10 | 4 |  40
 7 |    10 | 7 |  70
 8 |    10 | 8 |  80
 2 |    10 | 2 |  20
 5 |    10 | 5 |  50
 6 |    10 | 6 |  60
 9 |    10 | 9 |  90
(10 rows)

explain analyze select t1.*, t2.* from
(select i, count(*) from smallt group by i) as t1, (select i, sum(i) from smallt group by i) as t2
where t1.i = t2.i;
                                                                QUERY PLAN                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..862.01 rows=10 width=24) (actual time=0.501..0.740 rows=5 loops=2)
   ->  Hash Join  (cost=0.00..862.01 rows=4 width=24) (actual time=0.166..0.460 rows=2 loops=2)
         Hash Cond: smallt.i = smallt_1.i
         Extra Text: (seg0)   Hash chain length 1.0 avg, 1 max, using 4 of 131072 buckets.
         ->  GroupAggregate  (cost=0.00..431.01 rows=4 width=12) (actual time=0.041..0.055 rows=2 loops=2)
               Group Key: smallt.i
               ->  Sort  (cost=0.00..431.00 rows=34 width=4) (actual time=0.036..0.042 rows=20 loops=2)
                     Sort Key: smallt.i
                     Sort Method:  quicksort  Memory: 99kB
                     Executor Memory: 79kB  Segments: 3  Max: 27kB (segment 0)
                     ->  Seq Scan on smallt  (cost=0.00..431.00 rows=34 width=4) (actual time=0.004..0.013 rows=20 loops=2)
         ->  Hash  (cost=431.01..431.01 rows=4 width=12) (actual time=0.072..0.072 rows=2 loops=2)
               ->  GroupAggregate  (cost=0.00..431.01 rows=4 width=12) (actual time=0.053..0.069 rows=2 loops=2)
                     Group Key: smallt_1.i
                     ->  Sort  (cost=0.00..431.00 rows=34 width=4) (actual time=0.048..0.053 rows=20 loops=2)
                           Sort Key: smallt_1.i
                           Sort Method:  quicksort  Memory: 99kB
                           Executor Memory: 79kB  Segments: 3  Max: 27kB (segment 0)
                           ->  Seq Scan on smallt smallt_1  (cost=0.00..431.00 rows=34 width=4) (actual time=0.012..0.022 rows=20 loops=2)
   (slice0)    Executor memory: 386K bytes.
   (slice1)    Executor memory: 1238K bytes avg x 3 workers, 1238K bytes max (seg0).  Work_mem: 33K bytes max.
 Memory used:  128000kB
 Optimizer: Pivotal Optimizer (GPORCA) version 2.74.0
 Total runtime: 2.471 ms
(26 rows)

select * from
  test_util.extract_plan_stats($$
select t1.*, t2.* from
(select i, count(*) from smallt group by i) as t1, (select i, sum(i) from smallt group by i) as t2
where t1.i = t2.i;
  $$, false)
where stats_name = 'executor_mem_lines'
or stats_name = 'workmem_wanted_lines'
order by stats_name;
      stats_name      | stats_value 
----------------------+-------------
 executor_mem_lines   |           2
 workmem_wanted_lines |           0
(2 rows)

set enable_nestloop=off;
set enable_hashjoin=on;
-- Limit on Agg
select d, count(*) from smallt group by d limit 5; --ignore
     d      | count 
------------+-------
 01-19-2011 |     5
 01-16-2011 |     5
 01-13-2011 |     5
 01-10-2011 |     5
 01-15-2011 |     5
(5 rows)

explain analyze select d, count(*) from smallt group by d limit 5;
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=0.00..431.01 rows=5 width=12) (actual time=1.825..1.829 rows=5 loops=1)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..431.01 rows=5 width=12) (actual time=1.824..1.826 rows=5 loops=1)
         ->  Limit  (cost=0.00..431.01 rows=2 width=12) (actual time=1.580..1.584 rows=5 loops=1)
               ->  Finalize HashAggregate  (cost=0.00..431.01 rows=7 width=12) (actual time=1.579..1.581 rows=5 loops=1)
                     Group Key: d
                     Peak Memory Usage: 0 kB
                     ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..431.01 rows=7 width=12) (actual time=0.547..1.640 rows=7 loops=1)
                           Hash Key: d
                           ->  Partial GroupAggregate  (cost=0.00..431.01 rows=7 width=12) (actual time=0.143..0.179 rows=10 loops=1)
                                 Group Key: d
                                 ->  Sort  (cost=0.00..431.00 rows=34 width=4) (actual time=0.135..0.157 rows=50 loops=1)
                                       Sort Key: d
                                       Sort Method:  quicksort  Memory: 79kB
                                       Executor Memory: 79kB  Segments: 3  Max: 27kB (segment 0)
                                       ->  Seq Scan on smallt  (cost=0.00..431.00 rows=34 width=4) (actual time=0.101..0.113 rows=50 loops=1)
 Optimizer: Pivotal Optimizer (GPORCA)
 Planning Time: 7.521 ms
   (slice0)    Executor memory: 52K bytes.
   (slice1)    Executor memory: 22K bytes avg x 3 workers, 22K bytes max (seg1).  Work_mem: 24K bytes max.
   (slice2)    Executor memory: 39K bytes avg x 3 workers, 39K bytes max (seg0).  Work_mem: 27K bytes max.
 Memory used:  128000kB
 Execution Time: 2.830 ms
(22 rows)

select * from
  test_util.extract_plan_stats($$
select d, count(*) from smallt group by d limit 5;
  $$, false)
where stats_name = 'executor_mem_lines'
or stats_name = 'workmem_wanted_lines'
order by stats_name;
      stats_name      | stats_value 
----------------------+-------------
 executor_mem_lines   |           1
 workmem_wanted_lines |           0
(2 rows)

-- HashJoin
select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i order by 1,2,3;
 i |    t    |     d      
---+---------+------------
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-03-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 12 | 01-13-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-03-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 2  | 01-13-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-03-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 2 | text 7  | 01-13-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 13 | 01-14-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 3  | 01-14-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 3 | text 8  | 01-14-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-05-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 14 | 01-15-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-05-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 4  | 01-15-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-05-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 4 | text 9  | 01-15-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-06-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 0  | 01-16-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-06-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 10 | 01-16-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-06-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 5 | text 5  | 01-16-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-07-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 1  | 01-17-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-07-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 11 | 01-17-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-07-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 6 | text 6  | 01-17-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-08-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 12 | 01-18-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-08-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 2  | 01-18-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-08-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 7 | text 7  | 01-18-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-09-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 13 | 01-19-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-09-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 3  | 01-19-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-09-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 8 | text 8  | 01-19-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-10-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 14 | 01-20-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-10-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 4  | 01-20-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-10-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
 9 | text 9  | 01-20-2011
(1000 rows)

explain analyze select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i;
                                                          QUERY PLAN                                                           
-------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..862.09 rows=1000 width=15) (actual time=0.788..1.687 rows=500 loops=2)
   ->  Hash Join  (cost=0.00..862.03 rows=334 width=15) (actual time=0.402..1.244 rows=200 loops=2)
         Hash Cond: smallt.i = smallt_1.i
         Extra Text: (seg0)   Hash chain length 10.0 avg, 10 max, using 4 of 524288 buckets.
 
         ->  Seq Scan on smallt  (cost=0.00..431.00 rows=34 width=15) (actual time=0.002..0.008 rows=20 loops=2)
         ->  Hash  (cost=431.00..431.00 rows=34 width=4) (actual time=0.034..0.034 rows=20 loops=2)
               ->  Seq Scan on smallt smallt_1  (cost=0.00..431.00 rows=34 width=4) (actual time=0.019..0.023 rows=20 loops=2)
   (slice0)    Executor memory: 322K bytes.
   (slice1)    Executor memory: 4198K bytes avg x 3 workers, 4206K bytes max (seg0).  Work_mem: 1K bytes max.
 Memory used:  128000kB
 Optimizer: Pivotal Optimizer (GPORCA) version 2.74.0
 Total runtime: 4.129 ms
(13 rows)

-- Rescan on HashJoin
--select t1.* from (select t11.* from smallt as t11, smallt as t22 where t11.i = t22.i and t11.i < 2) as t1,
--   (select t11.* from smallt as t11, smallt as t22 where t11.d = t22.d and t11.i < 5) as t2;
-- Material in SubPlan
select smallt2.* from smallt2
where i < (select count(*) from smallt where smallt.i = smallt2.i) order by 1,2,3;
 i |   t    |     d      
---+--------+------------
 0 | text 0 | 01-01-2011
 0 | text 0 | 01-01-2011
 0 | text 0 | 01-06-2011
 0 | text 0 | 01-11-2011
 0 | text 0 | 01-11-2011
 0 | text 5 | 01-01-2011
 0 | text 5 | 01-01-2011
 0 | text 5 | 01-06-2011
 0 | text 5 | 01-06-2011
 0 | text 5 | 01-11-2011
 1 | text 1 | 01-02-2011
 1 | text 1 | 01-02-2011
 1 | text 1 | 01-07-2011
 1 | text 1 | 01-12-2011
 1 | text 1 | 01-12-2011
 1 | text 6 | 01-02-2011
 1 | text 6 | 01-02-2011
 1 | text 6 | 01-07-2011
 1 | text 6 | 01-07-2011
 1 | text 6 | 01-12-2011
 2 | text 2 | 01-03-2011
 2 | text 2 | 01-03-2011
 2 | text 2 | 01-08-2011
 2 | text 2 | 01-13-2011
 2 | text 2 | 01-13-2011
 2 | text 7 | 01-03-2011
 2 | text 7 | 01-03-2011
 2 | text 7 | 01-08-2011
 2 | text 7 | 01-08-2011
 2 | text 7 | 01-13-2011
 3 | text 3 | 01-04-2011
 3 | text 3 | 01-04-2011
 3 | text 3 | 01-09-2011
 3 | text 3 | 01-14-2011
 3 | text 3 | 01-14-2011
 3 | text 8 | 01-04-2011
 3 | text 8 | 01-04-2011
 3 | text 8 | 01-09-2011
 3 | text 8 | 01-09-2011
 3 | text 8 | 01-14-2011
 4 | text 4 | 01-05-2011
 4 | text 4 | 01-05-2011
 4 | text 4 | 01-10-2011
 4 | text 4 | 01-15-2011
 4 | text 4 | 01-15-2011
 4 | text 9 | 01-05-2011
 4 | text 9 | 01-05-2011
 4 | text 9 | 01-10-2011
 4 | text 9 | 01-10-2011
 4 | text 9 | 01-15-2011
(50 rows)

explain select smallt2.* from smallt2
where i < (select count(*) from smallt where smallt.i = smallt2.i);
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..862.02 rows=50 width=15)
   ->  Result  (cost=0.00..862.01 rows=17 width=15)
         Filter: (smallt2.i < COALESCE((count()), '0'::bigint))
         ->  Hash Left Join  (cost=0.00..862.01 rows=17 width=23)
               Hash Cond: (smallt2.i = smallt.i)
               ->  Seq Scan on smallt2  (cost=0.00..431.00 rows=17 width=15)
               ->  Hash  (cost=431.01..431.01 rows=4 width=12)
                     ->  GroupAggregate  (cost=0.00..431.01 rows=4 width=12)
                           Group Key: smallt.i
                           ->  Sort  (cost=0.00..431.00 rows=34 width=4)
                                 Sort Key: smallt.i
                                 ->  Seq Scan on smallt  (cost=0.00..431.00 rows=34 width=4)
 Optimizer: Pivotal Optimizer (GPORCA) version 3.83.0
(13 rows)

-- Sort in MergeJoin
-- start_ignore
-- Known_opt_diff: OPT-3417. Missing feature: Sort Merge Join
-- end_ignore
set enable_hashjoin=off;
set enable_mergejoin=on;
select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i and t1.i < 2;
 i |    t    |     d      
---+---------+------------
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
(200 rows)

explain analyze select t1.* from smallt as t1, smallt as t2 where t1.i = t2.i and t1.i < 2;
                                                          QUERY PLAN                                                          
------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..862.02 rows=200 width=15) (actual time=7.172..7.210 rows=200 loops=1)
   ->  Hash Join  (cost=0.00..862.01 rows=67 width=15) (actual time=4.313..6.739 rows=200 loops=1)
         Hash Cond: (smallt.i = smallt_1.i)
         Extra Text: (seg1)   Hash chain length 10.0 avg, 10 max, using 2 of 524288 buckets.
         ->  Seq Scan on smallt  (cost=0.00..431.00 rows=7 width=15) (actual time=0.005..0.013 rows=20 loops=1)
               Filter: (i < 2)
         ->  Hash  (cost=431.00..431.00 rows=7 width=4) (actual time=2.116..2.117 rows=20 loops=1)
               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
               ->  Seq Scan on smallt smallt_1  (cost=0.00..431.00 rows=7 width=4) (actual time=2.093..2.101 rows=20 loops=1)
                     Filter: (i < 2)
 Optimizer: Pivotal Optimizer (GPORCA)
 Planning Time: 16.468 ms
   (slice0)    Executor memory: 37K bytes.
   (slice1)    Executor memory: 4132K bytes avg x 3 workers, 4156K bytes max (seg1).  Work_mem: 4097K bytes max.
 Memory used:  128000kB
 Execution Time: 8.132 ms
(16 rows)

select t1.* from smallt as t1, smallt as t2 where t1.d = t2.d and t1.i < 2;
 i |    t    |     d      
---+---------+------------
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 6  | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 11 | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 1 | text 1  | 01-12-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 5  | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 10 | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 0 | text 0  | 01-11-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 11 | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 1  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 1 | text 6  | 01-02-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 10 | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 0  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
 0 | text 5  | 01-01-2011
(100 rows)

--start_ignore
explain analyze select t1.* from smallt as t1, smallt as t2 where t1.d = t2.d and t1.i < 2;
                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..862.02 rows=100 width=15) (actual time=21.762..22.207 rows=100 loops=1)
   ->  Hash Join  (cost=0.00..862.01 rows=34 width=15) (actual time=19.235..21.313 rows=75 loops=1)
         Hash Cond: (smallt.d = smallt_1.d)
         Extra Text: (seg1)   Hash chain length 5.0 avg, 5 max, using 7 of 524288 buckets.
         ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..431.00 rows=7 width=15) (actual time=0.009..0.016 rows=15 loops=1)
               Hash Key: smallt.d
               ->  Seq Scan on smallt  (cost=0.00..431.00 rows=7 width=15) (actual time=2.770..2.779 rows=20 loops=1)
                     Filter: (i < 2)
         ->  Hash  (cost=431.00..431.00 rows=34 width=4) (actual time=18.918..18.919 rows=35 loops=1)
               Buckets: 524288  Batches: 1  Memory Usage: 4098kB
               ->  Redistribute Motion 3:3  (slice3; segments: 3)  (cost=0.00..431.00 rows=34 width=4) (actual time=14.210..18.828 rows=35 loops=1)
                     Hash Key: smallt_1.d
                     ->  Seq Scan on smallt smallt_1  (cost=0.00..431.00 rows=34 width=4) (actual time=4.560..4.587 rows=50 loops=1)
 Optimizer: Pivotal Optimizer (GPORCA)
 Planning Time: 13.287 ms
   (slice0)    Executor memory: 39K bytes.
   (slice1)    Executor memory: 4148K bytes avg x 3 workers, 4148K bytes max (seg1).  Work_mem: 4098K bytes max.
   (slice2)    Executor memory: 37K bytes avg x 3 workers, 37K bytes max (seg0).
   (slice3)    Executor memory: 37K bytes avg x 3 workers, 37K bytes max (seg0).
 Memory used:  128000kB
 Execution Time: 23.563 ms
(21 rows)

--end_ignore
set enable_hashjoin=on;
set enable_mergejoin=off;
-- ShareInputScan
--with my_group_max(i, maximum) as (select i, max(d) from smallt group by i)
--select smallt2.* from my_group_max, smallt2 where my_group_max.i = smallt2.i
--and smallt2.i < any (select maximum from my_group_max);
--explain analyze with my_group_max(i, maximum) as (select i, max(d) from smallt group by i)
--select smallt2.* from my_group_max, smallt2 where my_group_max.i = smallt2.i
--and smallt2.i < any (select maximum from my_group_max);
-- IndexScan
create index smallt_d_idx on smallt (d);
create index smallt2_d_idx on smallt2 (d);
-- start_ignore
-- Known_opt_diff: This test is only here for the planner. It doesn't exercise eagerfree in ORCA plans
-- end_ignore
set enable_hashjoin=off;
set enable_nestloop=on;
set enable_seqscan=off;
set enable_bitmapscan=off;
select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date order by 1,2,3;
 i |    t    |     d      
---+---------+------------
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
(20 rows)

explain analyze select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..12.00 rows=4 width=15) (actual time=4.383..4.390 rows=20 loops=1)
   ->  Hash Join  (cost=0.00..12.00 rows=2 width=15) (actual time=2.064..3.870 rows=20 loops=1)
         Hash Cond: (smallt.i = smallt2.i)
         Extra Text: (seg0)   Hash chain length 4.0 avg, 4 max, using 1 of 524288 buckets.
         ->  Index Scan using smallt_d_idx on smallt  (cost=0.00..6.00 rows=2 width=15) (actual time=0.009..0.012 rows=5 loops=1)
               Index Cond: (d = '01-04-2011'::date)
         ->  Hash  (cost=6.00..6.00 rows=2 width=4) (actual time=0.032..0.033 rows=4 loops=1)
               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
               ->  Index Scan using smallt2_d_idx on smallt2  (cost=0.00..6.00 rows=2 width=4) (actual time=0.021..0.025 rows=4 loops=1)
                     Index Cond: (d = '01-04-2011'::date)
 Optimizer: Pivotal Optimizer (GPORCA)
 Planning Time: 15.046 ms
   (slice0)    Executor memory: 47K bytes.
   (slice1)    Executor memory: 4171K bytes avg x 3 workers, 4214K bytes max (seg0).  Work_mem: 4097K bytes max.
 Memory used:  128000kB
 Execution Time: 5.283 ms
(16 rows)

-- IndexOnlyScan
explain analyze select *, exists(select 1 from pg_class where oid = c.oid) as dummy from pg_class c;
                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Seq Scan on pg_class c  (cost=10000000000.00..10003029725.25 rows=15124 width=206) (actual time=24.734..41.952 rows=6569 loops=1)
   SubPlan 1
     ->  Index Only Scan using pg_class_oid_index on pg_class  (cost=0.29..200.30 rows=1 width=0) (never executed)
           Index Cond: (oid = c.oid)
           Heap Fetches: 0
   SubPlan 2
     ->  Index Only Scan using pg_class_oid_index on pg_class pg_class_1  (cost=0.29..21127.15 rows=15124 width=4) (actual time=0.075..18.903 rows=6569 loops=1)
           Heap Fetches: 20272
 Planning time: 5.919 ms
   (slice0)    Executor memory: 937K bytes.
 Memory used:  128000kB
 Optimizer: Postgres query optimizer
 Execution time: 43.318 ms
(13 rows)

-- BitmapScan
-- start_ignore
-- Known_opt_diff: This test is only here for the planner. It doesn't exercise eagerfree in ORCA plans
-- end_ignore
set enable_indexscan=off;
set enable_bitmapscan=on;
select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date order by 1,2,3;
 i |    t    |     d      
---+---------+------------
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 13 | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 3  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
 3 | text 8  | 01-04-2011
(20 rows)

explain analyze select smallt.* from smallt, smallt2 where smallt.i = smallt2.i and smallt2.d = '2011-01-04'::date
and smallt.d = '2011-01-04'::date;
                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..12.00 rows=4 width=15) (actual time=4.300..4.306 rows=20 loops=1)
   ->  Hash Join  (cost=0.00..12.00 rows=2 width=15) (actual time=2.030..3.724 rows=20 loops=1)
         Hash Cond: (smallt.i = smallt2.i)
         Extra Text: (seg0)   Hash chain length 4.0 avg, 4 max, using 1 of 524288 buckets.
         ->  Index Scan using smallt_d_idx on smallt  (cost=0.00..6.00 rows=2 width=15) (actual time=0.009..0.012 rows=5 loops=1)
               Index Cond: (d = '01-04-2011'::date)
         ->  Hash  (cost=6.00..6.00 rows=2 width=4) (actual time=0.036..0.036 rows=4 loops=1)
               Buckets: 524288  Batches: 1  Memory Usage: 4097kB
               ->  Index Scan using smallt2_d_idx on smallt2  (cost=0.00..6.00 rows=2 width=4) (actual time=0.025..0.028 rows=4 loops=1)
                     Index Cond: (d = '01-04-2011'::date)
 Optimizer: Pivotal Optimizer (GPORCA)
 Planning Time: 10.951 ms
   (slice0)    Executor memory: 47K bytes.
   (slice1)    Executor memory: 4171K bytes avg x 3 workers, 4214K bytes max (seg0).  Work_mem: 4097K bytes max.
 Memory used:  128000kB
 Execution Time: 5.257 ms
(16 rows)

set enable_hashjoin=on;
set enable_nestloop=off;
set enable_seqscan=on;
set enable_indexscan=on;
-- SubPlan
with my_group_sum(d, total) as (select d, sum(i) from smallt group by d)
select smallt2.* from smallt2
where i < all (select total from my_group_sum, smallt, smallt2 as tmp where my_group_sum.d = smallt.d and smallt.d = tmp.d and my_group_sum.d = smallt2.d)
and i = 0 order by 1,2,3; --order 1,2,3
 i |   t    |     d      
---+--------+------------
 0 | text 0 | 01-06-2011
 0 | text 5 | 01-06-2011
 0 | text 5 | 01-06-2011
(3 rows)

select smallt2.* from smallt2
where i < all (select total from (select d, sum(i) as total from smallt group by d) as my_group_sum, smallt, smallt2 as tmp
    where my_group_sum.d = smallt.d and smallt.d = tmp.d and my_group_sum.d = smallt2.d)
and i = 0 order by 1,2,3; --order 1,2,3
 i |   t    |     d      
---+--------+------------
 0 | text 0 | 01-06-2011
 0 | text 5 | 01-06-2011
 0 | text 5 | 01-06-2011
(3 rows)

-- Test Subplan with Agg
with my_group_sum(d, total) as (select d, sum(i) from smallt group by d)
select count(*) from smallt2
where 0 < all (select total from my_group_sum, smallt2 as tmp where my_group_sum.d = smallt2.d);
 count 
-------
    43
(1 row)

--start_ignore
explain with my_group_sum(d, total) as (select d, sum(i) from smallt group by d)
        select count(*) from smallt2
        where 0 < all (select total from my_group_sum, smallt2 as tmp where my_group_sum.d = smallt2.d);
                                                                                                                                                                                         QUERY PLAN                                                                                                                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=0.00..1324486.44 rows=1 width=8)
   ->  Gather Motion 3:1  (slice1; segments: 3)  (cost=0.00..1324486.44 rows=1 width=8)
         ->  Partial Aggregate  (cost=0.00..1324486.44 rows=1 width=8)
               ->  Hash Join  (cost=0.00..1324486.44 rows=6 width=1)
                     Hash Cond: (smallt2.d = smallt.d)
                     ->  Redistribute Motion 3:3  (slice2; segments: 3)  (cost=0.00..431.00 rows=17 width=4)
                           Hash Key: smallt2.d
                           ->  Seq Scan on smallt2  (cost=0.00..431.00 rows=17 width=4)
                     ->  Hash  (cost=1324055.44..1324055.44 rows=3 width=4)
                           ->  Result  (cost=0.00..1324055.44 rows=3 width=4)
                                 Filter: ((CASE WHEN (sum((CASE WHEN (0 >= (sum(smallt.i))) THEN 1 ELSE 0 END)) IS NULL) THEN true WHEN (sum((CASE WHEN ((sum(smallt.i)) IS NULL) THEN 1 ELSE 0 END)) > '0'::bigint) THEN NULL::boolean WHEN (0 IS NULL) THEN NULL::boolean WHEN (sum((CASE WHEN (0 >= (sum(smallt.i))) THEN 1 ELSE 0 END)) = '0'::bigint) THEN true ELSE false END) = true)
                                 ->  HashAggregate  (cost=0.00..1324055.44 rows=7 width=20)
                                       Group Key: smallt.d
                                       ->  Nested Loop  (cost=0.00..1324055.39 rows=334 width=12)
                                             Join Filter: true
                                             ->  Finalize HashAggregate  (cost=0.00..431.01 rows=7 width=12)
                                                   Group Key: smallt.d
                                                   ->  Redistribute Motion 3:3  (slice4; segments: 3)  (cost=0.00..431.01 rows=7 width=12)
                                                         Hash Key: smallt.d
                                                         ->  Streaming Partial HashAggregate  (cost=0.00..431.01 rows=7 width=12)
                                                               Group Key: smallt.d
                                                               ->  Seq Scan on smallt  (cost=0.00..431.00 rows=34 width=8)
                                             ->  Materialize  (cost=0.00..431.00 rows=50 width=1)
                                                   ->  Broadcast Motion 3:3  (slice3; segments: 3)  (cost=0.00..431.00 rows=50 width=1)
                                                         ->  Seq Scan on smallt2 smallt2_1  (cost=0.00..431.00 rows=17 width=1)
 Optimizer: Pivotal Optimizer (GPORCA)
(26 rows)

--end_ignore
-- Nested Subplan
create table eager_free_r (r1 int, r2 int, r3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'r1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table eager_free_s (s1 int, s2 int, s3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 's1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
create table eager_free_t (t1 int, t2 int, t3 int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 't1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into eager_free_r select 1 + g % 20, 1 + g % 5, 1 + g % 8 from generate_series(0, 39) g;
insert into eager_free_s select 1 + g % 20, 6 + g % 5, 1 + g % 4 from generate_series(0, 19) g;
insert into eager_free_t select 1 + g % 30, 1 + g % 6, 1 + g % 5 from generate_series(0, 29) g;
select * from eager_free_t where t1 > (select min(r1) from eager_free_r where r2<t2 and r3 > (Select min(s3) from eager_free_s where s1<r1));
 t1 | t2 | t3 
----+----+----
 11 |  5 |  1
 17 |  5 |  2
 18 |  6 |  3
 21 |  3 |  1
 20 |  2 |  5
 29 |  5 |  4
 26 |  2 |  1
 27 |  3 |  2
  5 |  5 |  5
  9 |  3 |  4
 12 |  6 |  2
 23 |  5 |  3
 24 |  6 |  4
 28 |  4 |  3
 30 |  6 |  5
  4 |  4 |  4
  3 |  3 |  3
  8 |  2 |  3
  6 |  6 |  1
 14 |  2 |  4
 10 |  4 |  5
 15 |  3 |  5
 16 |  4 |  1
 22 |  4 |  2
(24 rows)

reset optimizer_segments;
reset search_path;
drop schema eagerfree cascade;
NOTICE:  drop cascades to 6 other objects
DETAIL:  drop cascades to table eagerfree.smallt
drop cascades to table eagerfree.bigt
drop cascades to table eagerfree.smallt2
drop cascades to table eagerfree.eager_free_r
drop cascades to table eagerfree.eager_free_s
drop cascades to table eagerfree.eager_free_t
