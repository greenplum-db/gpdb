-- Smoke tests for syslogger (since GP syslogger code is divergent from upstream)
create or replace function log_and_retrieve_master(log_message text)
returns table (log_msg text) as
$$
declare
  session_id text;
  start_time timestamp;
begin
  -- We need to check logs with two conditions:
  -- 1. logs generated after the UDF starts (otherwise we will get all the logs
  --    including logs generated by previous callings since we cannot delete
  --    previous logs)
  -- 2. logs generated by current session (otherwise we will get logs generated
  --    by other sessions running concurrently)

  -- Get start time
  select now()::timestamp at TIME ZONE 'CST' as "Timestamp CST" into start_time;

  -- Get current session id (e.g. "con11")
  select current_setting('gp_session_id') into session_id;
  session_id = 'con' || session_id;

  raise log '%', log_message;
  return query select logmessage from gp_toolkit.gp_log_master_concise
    where logmessage = log_message and logtime > start_time and logsession = session_id;
end;
$$ language plpgsql;
select log_and_retrieve_master('message with a " mark');
 log_and_retrieve_master 
-------------------------
 message with a " mark
(1 row)

select log_and_retrieve_master('message with two "" mark');
 log_and_retrieve_master  
--------------------------
 message with two "" mark
(1 row)

select log_and_retrieve_master('message with three """ mark');
   log_and_retrieve_master   
-----------------------------
 message with three """ mark
(1 row)

select log_and_retrieve_master('message with foo"');
 log_and_retrieve_master 
-------------------------
 message with foo"
(1 row)

select log_and_retrieve_master('message with ""foo""bar"');
 log_and_retrieve_master  
--------------------------
 message with ""foo""bar"
(1 row)

select log_and_retrieve_master('message with no quotes');
 log_and_retrieve_master 
-------------------------
 message with no quotes
(1 row)

