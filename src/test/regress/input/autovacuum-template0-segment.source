-- Test to validate autovacuum takes care of anti-XID wraparounds of
-- 'template0'. Because of that, the age of template0 should not go
-- above autovacuum_freeze_max_age (we assume the default of 200
-- million here)

create or replace function test_consume_xids(int4) returns void
as '@abs_srcdir@/regress.so', 'test_consume_xids'
language C;

-- start_ignore
\! gpconfig -c debug_burn_xids -v on --skipvalidation
\! gpconfig -c autovacuum_naptime -v 5
\! gpstop -au
-- end_ignore

-- Show autovacuum_max_workers
show autovacuum_max_workers;

-- Suspend the autovacuum worker from vacuuming before
-- ShmemVariableCache->latestCompletedXid is expected to be updated
SELECT gp_inject_fault('auto_vac_worker_before_do_autovacuum', 'suspend', '', 'template0', '', 1, -1, 0, dbid) from gp_segment_configuration where content = 0 and role = 'p';

select test_consume_xids(100 * 1000000) from gp_dist_random('gp_id') where gp_segment_id = 0;
select test_consume_xids(100 * 1000000) from gp_dist_random('gp_id') where gp_segment_id = 0;
select test_consume_xids(10 * 1000000) from gp_dist_random('gp_id') where gp_segment_id = 0;

select gp_segment_id, age(datfrozenxid) < 200 * 1000000 from gp_dist_random('pg_database') where datname='template0';

-- start_ignore
select gp_segment_id, datfrozenxid from gp_dist_random('pg_database') where datname='template0';
-- end_ignore

-- Note that autovacuum laucher will continue start new worker for the same database
-- when the old worker is blocked. There are at most 3(autovacuum_max_workers) workers
-- Wait until the three autovacuum workers are triggered
SELECT gp_wait_until_triggered_fault('auto_vac_worker_before_do_autovacuum', 3, dbid) from gp_segment_configuration where content = 0 and role = 'p';

-- Suspend the autovacuum worker after vacuuming
SELECT gp_inject_fault('auto_vac_worker_after_do_autovacuum', 'suspend', '', 'template0', '', 1, -1, 0, dbid) from gp_segment_configuration where content = 0 and role = 'p';

SELECT gp_inject_fault('auto_vac_worker_before_do_autovacuum', 'reset', dbid) from gp_segment_configuration where content = 0 and role = 'p';

-- wait until three autovacuum workers finish vacuum
SELECT gp_wait_until_triggered_fault('auto_vac_worker_after_do_autovacuum', 3, dbid) from gp_segment_configuration where content = 0 and role = 'p';
SELECT gp_inject_fault('auto_vac_worker_after_do_autovacuum', 'reset', dbid) from gp_segment_configuration where content = 0 and role = 'p';

-- catalog table should be young
select gp_segment_id, age(datfrozenxid) < 200 * 1000000 from gp_dist_random('pg_database') where datname='template0';

-- start_ignore
\! gpconfig -r debug_burn_xids --skipvalidation
\! gpconfig -r autovacuum_naptime
\! gpstop -au
-- end_ignore

