create or replace function test_consume_xids(int4) returns void
as '@abs_srcdir@/regress.so', 'test_consume_xids'
language C;
set debug_burn_xids=on;
-- Speed up test.
ALTER SYSTEM SET autovacuum_naptime = 5;
select * from pg_reload_conf();
 pg_reload_conf 
----------------
 t
(1 row)

-- Vacuum database
vacuum;
-- Show autovacuum_max_workers
show autovacuum_max_workers;
 autovacuum_max_workers 
------------------------
 3
(1 row)

-- Autovacuum should take care of anti-XID wraparounds of catalog tables.
-- Because of that, the age of pg_class should not go much above
-- autovacuum_freeze_max_age (we assume the default of 200 million here).
SELECT age(relfrozenxid) < 200 * 1000000 FROM pg_class WHERE relname='pg_class';
 ?column? 
----------
 t
(1 row)

-- Suspend the autovacuum worker from vacuuming before
-- ShmemVariableCache->latestCompletedXid is expected to be updated
SELECT gp_inject_fault('auto_vac_worker_before_do_autovacuum', 'suspend', '', 'regression', '', 1, -1, 0, 1);
 gp_inject_fault 
-----------------
 Success:
(1 row)

-- Suspend the autovacuum worker after vacuuming
SELECT gp_inject_fault('auto_vac_worker_after_do_autovacuum', 'suspend', '', 'regression', '', 1, -1, 0, 1);
 gp_inject_fault 
-----------------
 Success:
(1 row)

select test_consume_xids(100 * 1000000);
 test_consume_xids 
-------------------
 
(1 row)

select test_consume_xids(100 * 1000000);
 test_consume_xids 
-------------------
 
(1 row)

select test_consume_xids(10 * 1000000);
 test_consume_xids 
-------------------
 
(1 row)

SELECT age(relfrozenxid) < 200 * 1000000 FROM pg_class WHERE relname='pg_class';
 ?column? 
----------
 f
(1 row)

-- Note that autovacuum laucher will continue start new worker for the same database
-- when the old worker is blocked. There are at most 3(autovacuum_max_workers) workers
-- Wait until the three autovacuum workers are triggered
SELECT gp_wait_until_triggered_fault('auto_vac_worker_before_do_autovacuum', 3, 1);
 gp_wait_until_triggered_fault 
-------------------------------
 Success:
(1 row)

SELECT gp_inject_fault('auto_vac_worker_before_do_autovacuum', 'reset', 1);
 gp_inject_fault 
-----------------
 Success:
(1 row)

-- wait until three autovacuum workers finish vacuum
SELECT gp_wait_until_triggered_fault('auto_vac_worker_after_do_autovacuum', 3, 1);
 gp_wait_until_triggered_fault 
-------------------------------
 Success:
(1 row)

SELECT gp_inject_fault('auto_vac_worker_after_do_autovacuum', 'reset', 1);
 gp_inject_fault 
-----------------
 Success:
(1 row)

-- catalog table should be young
SELECT age(relfrozenxid) < 200 * 1000000 FROM pg_class WHERE relname='pg_class';
 ?column? 
----------
 t
(1 row)

-- Reset GUCs.
ALTER SYSTEM RESET autovacuum_naptime;
select * from pg_reload_conf();
 pg_reload_conf 
----------------
 t
(1 row)

